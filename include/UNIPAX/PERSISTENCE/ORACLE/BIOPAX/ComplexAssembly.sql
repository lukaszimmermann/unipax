/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_rightEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_rightEntity"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_rightEntity"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_leftEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_leftEntity_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_leftEntity_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_participantSto" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_participantSto"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_participantSto"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_interactionTyp" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_interactionTyp"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_interactionTyp"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_participant"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_participant"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ComplexAssembly" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20));

CREATE TABLE "ComplexAssembly_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ComplexAssembly_comments_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_comments_objec"
  ON "ComplexAssembly_comments" ("object_id");

CREATE INDEX "ComplexAssembly_comments_index"
  ON "ComplexAssembly_comments" ("index");

CREATE TABLE "ComplexAssembly_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ComplexAssembly_name_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_name_object_id"
  ON "ComplexAssembly_name" ("object_id");

CREATE INDEX "ComplexAssembly_name_index_i"
  ON "ComplexAssembly_name" ("index");

CREATE TABLE "ComplexAssembly_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_xref_object"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_xref_object"
  ON "ComplexAssembly_id_xref" ("object_id");

CREATE INDEX "ComplexAssembly_id_xref_index_"
  ON "ComplexAssembly_id_xref" ("index");

CREATE TABLE "ComplexAssembly_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_participant"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_participant"
  ON "ComplexAssembly_id_participant" ("object_id");

CREATE INDEX "ComplexAssembly_id_participant"
  ON "ComplexAssembly_id_participant" ("index");

CREATE TABLE "ComplexAssembly_interactionTyp" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ComplexAssembly_interactionTyp"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_interactionTyp"
  ON "ComplexAssembly_interactionTyp" ("object_id");

CREATE INDEX "ComplexAssembly_interactionTyp"
  ON "ComplexAssembly_interactionTyp" ("index");

CREATE TABLE "ComplexAssembly_participantSto" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ComplexAssembly_participantSto"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_participantSto"
  ON "ComplexAssembly_participantSto" ("object_id");

CREATE INDEX "ComplexAssembly_participantSto"
  ON "ComplexAssembly_participantSto" ("index");

CREATE TABLE "ComplexAssembly_id_leftEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_leftEntity_"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_leftEntity_"
  ON "ComplexAssembly_id_leftEntity" ("object_id");

CREATE INDEX "ComplexAssembly_id_leftEntity_"
  ON "ComplexAssembly_id_leftEntity" ("index");

CREATE TABLE "ComplexAssembly_id_rightEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_rightEntity"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_rightEntity"
  ON "ComplexAssembly_id_rightEntity" ("object_id");

CREATE INDEX "ComplexAssembly_id_rightEntity"
  ON "ComplexAssembly_id_rightEntity" ("index");

ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_kineticLaw_fk"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ComplexAssembly_interactionTyp" ADD
  CONSTRAINT "ComplexAssembly_interactionTyp"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "ComplexAssembly_participantSto" ADD
  CONSTRAINT "ComplexAssembly_participantSto"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

EXIT;

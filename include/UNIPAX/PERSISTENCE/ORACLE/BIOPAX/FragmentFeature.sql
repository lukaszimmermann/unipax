/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_featureLocatio" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_featureLocatio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_featureLocatio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_id_featureLoca" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_id_featureLoca"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_id_featureLoca"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_id_memberFeatu" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_id_memberFeatu"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_id_memberFeatu"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "FragmentFeature" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "FragmentFeature_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "FragmentFeature_comment_object"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_comment_object"
  ON "FragmentFeature_comment" ("object_id");

CREATE INDEX "FragmentFeature_comment_index_"
  ON "FragmentFeature_comment" ("index");

CREATE TABLE "FragmentFeature_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "FragmentFeature_evidence_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_evidence_objec"
  ON "FragmentFeature_evidence" ("object_id");

CREATE INDEX "FragmentFeature_evidence_index"
  ON "FragmentFeature_evidence" ("index");

CREATE TABLE "FragmentFeature_id_memberFeatu" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "FragmentFeature_id_memberFeatu"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_id_memberFeatu"
  ON "FragmentFeature_id_memberFeatu" ("object_id");

CREATE INDEX "FragmentFeature_id_memberFeatu"
  ON "FragmentFeature_id_memberFeatu" ("index");

CREATE TABLE "FragmentFeature_id_featureLoca" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "FragmentFeature_id_featureLoca"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_id_featureLoca"
  ON "FragmentFeature_id_featureLoca" ("object_id");

CREATE INDEX "FragmentFeature_id_featureLoca"
  ON "FragmentFeature_id_featureLoca" ("index");

CREATE TABLE "FragmentFeature_featureLocatio" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "FragmentFeature_featureLocatio"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_featureLocatio"
  ON "FragmentFeature_featureLocatio" ("object_id");

CREATE INDEX "FragmentFeature_featureLocatio"
  ON "FragmentFeature_featureLocatio" ("index");

ALTER TABLE "FragmentFeature" ADD
  CONSTRAINT "FragmentFeature_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "FragmentFeature_evidence" ADD
  CONSTRAINT "FragmentFeature_evidence_value"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "FragmentFeature_featureLocatio" ADD
  CONSTRAINT "FragmentFeature_featureLocatio"
    FOREIGN KEY ("value")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

EXIT;

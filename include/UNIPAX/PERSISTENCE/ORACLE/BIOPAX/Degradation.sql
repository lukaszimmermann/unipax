/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_rightEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_rightEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_rightEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_leftEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_leftEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_leftEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_participantStoichi" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_participantStoichi"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_participantStoichi"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_interactionType_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_interactionType_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Degradation" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20));

CREATE TABLE "Degradation_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Degradation_comments_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_comments_object_id"
  ON "Degradation_comments" ("object_id");

CREATE INDEX "Degradation_comments_index_i"
  ON "Degradation_comments" ("index");

CREATE TABLE "Degradation_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Degradation_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_name_object_id_i"
  ON "Degradation_name" ("object_id");

CREATE INDEX "Degradation_name_index_i"
  ON "Degradation_name" ("index");

CREATE TABLE "Degradation_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_xref_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_xref_object_id_"
  ON "Degradation_id_xref" ("object_id");

CREATE INDEX "Degradation_id_xref_index_i"
  ON "Degradation_id_xref" ("index");

CREATE TABLE "Degradation_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_participant_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_participant_obj"
  ON "Degradation_id_participant" ("object_id");

CREATE INDEX "Degradation_id_participant_ind"
  ON "Degradation_id_participant" ("index");

CREATE TABLE "Degradation_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Degradation_interactionType_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_interactionType_ob"
  ON "Degradation_interactionType" ("object_id");

CREATE INDEX "Degradation_interactionType_in"
  ON "Degradation_interactionType" ("index");

CREATE TABLE "Degradation_participantStoichi" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Degradation_participantStoichi"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_participantStoichi"
  ON "Degradation_participantStoichi" ("object_id");

CREATE INDEX "Degradation_participantStoichi"
  ON "Degradation_participantStoichi" ("index");

CREATE TABLE "Degradation_id_leftEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_leftEntity_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_leftEntity_obje"
  ON "Degradation_id_leftEntity" ("object_id");

CREATE INDEX "Degradation_id_leftEntity_inde"
  ON "Degradation_id_leftEntity" ("index");

CREATE TABLE "Degradation_id_rightEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_rightEntity_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_rightEntity_obj"
  ON "Degradation_id_rightEntity" ("object_id");

CREATE INDEX "Degradation_id_rightEntity_ind"
  ON "Degradation_id_rightEntity" ("index");

ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_kineticLaw_fk"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "Degradation_interactionType" ADD
  CONSTRAINT "Degradation_interactionType_va"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

ALTER TABLE "Degradation_participantStoichi" ADD
  CONSTRAINT "Degradation_participantStoichi"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

EXIT;

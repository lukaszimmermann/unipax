/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature_id_bindsTo" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_id_bindsTo_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_id_bindsTo_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature_featureLocation" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_featureLocation"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_featureLocation"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature_id_featureLocat" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_id_featureLocat"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_id_featureLocat"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature_id_memberFeatur" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_id_memberFeatur"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_id_memberFeatur"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BindingFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BindingFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BindingFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "BindingFeature" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "intraMolecular" NUMBER(1) NOT NULL);

CREATE TABLE "BindingFeature_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "BindingFeature_comment_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "BindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BindingFeature_comment_object_"
  ON "BindingFeature_comment" ("object_id");

CREATE INDEX "BindingFeature_comment_index_i"
  ON "BindingFeature_comment" ("index");

CREATE TABLE "BindingFeature_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BindingFeature_evidence_object"
    FOREIGN KEY ("object_id")
    REFERENCES "BindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BindingFeature_evidence_object"
  ON "BindingFeature_evidence" ("object_id");

CREATE INDEX "BindingFeature_evidence_index_"
  ON "BindingFeature_evidence" ("index");

CREATE TABLE "BindingFeature_id_memberFeatur" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BindingFeature_id_memberFeatur"
    FOREIGN KEY ("object_id")
    REFERENCES "BindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BindingFeature_id_memberFeatur"
  ON "BindingFeature_id_memberFeatur" ("object_id");

CREATE INDEX "BindingFeature_id_memberFeatu0"
  ON "BindingFeature_id_memberFeatur" ("index");

CREATE TABLE "BindingFeature_id_featureLocat" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BindingFeature_id_featureLocat"
    FOREIGN KEY ("object_id")
    REFERENCES "BindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BindingFeature_id_featureLocat"
  ON "BindingFeature_id_featureLocat" ("object_id");

CREATE INDEX "BindingFeature_id_featureLoca0"
  ON "BindingFeature_id_featureLocat" ("index");

CREATE TABLE "BindingFeature_featureLocation" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BindingFeature_featureLocation"
    FOREIGN KEY ("object_id")
    REFERENCES "BindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BindingFeature_featureLocation"
  ON "BindingFeature_featureLocation" ("object_id");

CREATE INDEX "BindingFeature_featureLocatio0"
  ON "BindingFeature_featureLocation" ("index");

CREATE TABLE "BindingFeature_id_bindsTo" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BindingFeature_id_bindsTo_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "BindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BindingFeature_id_bindsTo_obje"
  ON "BindingFeature_id_bindsTo" ("object_id");

CREATE INDEX "BindingFeature_id_bindsTo_inde"
  ON "BindingFeature_id_bindsTo" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalPathwayStep_id_next" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalPathwayStep_id_next"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalPathwayStep_id_next"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalPathwayStep_evidenc" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalPathwayStep_evidenc"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalPathwayStep_evidenc"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalPathwayStep_id_step" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalPathwayStep_id_step"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalPathwayStep_id_step"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalPathwayStep_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalPathwayStep_comment"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalPathwayStep_comment"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalPathwayStep" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalPathwayStep_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalPathwayStep_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "BiochemicalPathwayStep" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "stepDirection" VARCHAR2(512),
  "id_stepConversion" NUMBER(20) NOT NULL);

CREATE TABLE "BiochemicalPathwayStep_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "BiochemicalPathwayStep_comment"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalPathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalPathwayStep_comment"
  ON "BiochemicalPathwayStep_comment" ("object_id");

CREATE INDEX "BiochemicalPathwayStep_commen0"
  ON "BiochemicalPathwayStep_comment" ("index");

CREATE TABLE "BiochemicalPathwayStep_id_step" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BiochemicalPathwayStep_id_step"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalPathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalPathwayStep_id_step"
  ON "BiochemicalPathwayStep_id_step" ("object_id");

CREATE INDEX "BiochemicalPathwayStep_id_ste0"
  ON "BiochemicalPathwayStep_id_step" ("index");

CREATE TABLE "BiochemicalPathwayStep_evidenc" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BiochemicalPathwayStep_evidenc"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalPathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalPathwayStep_evidenc"
  ON "BiochemicalPathwayStep_evidenc" ("object_id");

CREATE INDEX "BiochemicalPathwayStep_eviden0"
  ON "BiochemicalPathwayStep_evidenc" ("index");

CREATE TABLE "BiochemicalPathwayStep_id_next" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BiochemicalPathwayStep_id_next"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalPathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalPathwayStep_id_next"
  ON "BiochemicalPathwayStep_id_next" ("object_id");

CREATE INDEX "BiochemicalPathwayStep_id_nex0"
  ON "BiochemicalPathwayStep_id_next" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_kEQ" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_kEQ_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_kEQ_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_deltaG" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_deltaG_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_deltaG_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_id_rightEn" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_id_rightEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_id_rightEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_id_leftEnt" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_id_leftEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_id_leftEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_participan" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_participan"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_participan"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_interactio" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_interactio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_interactio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_id_partici" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_id_partici"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_id_partici"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_id_xref_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_id_xref_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_comments_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_comments_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BiochemicalReaction" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BiochemicalReaction_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BiochemicalReaction_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "BiochemicalReaction" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20),
  "deltaH" BINARY_DOUBLE NOT NULL,
  "deltaS" BINARY_DOUBLE NOT NULL,
  "eCNumber" VARCHAR2(512));

CREATE TABLE "BiochemicalReaction_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "BiochemicalReaction_comments_o"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_comments_o"
  ON "BiochemicalReaction_comments" ("object_id");

CREATE INDEX "BiochemicalReaction_comments_i"
  ON "BiochemicalReaction_comments" ("index");

CREATE TABLE "BiochemicalReaction_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "BiochemicalReaction_name_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_name_objec"
  ON "BiochemicalReaction_name" ("object_id");

CREATE INDEX "BiochemicalReaction_name_index"
  ON "BiochemicalReaction_name" ("index");

CREATE TABLE "BiochemicalReaction_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BiochemicalReaction_id_xref_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_id_xref_ob"
  ON "BiochemicalReaction_id_xref" ("object_id");

CREATE INDEX "BiochemicalReaction_id_xref_in"
  ON "BiochemicalReaction_id_xref" ("index");

CREATE TABLE "BiochemicalReaction_id_partici" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BiochemicalReaction_id_partici"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_id_partici"
  ON "BiochemicalReaction_id_partici" ("object_id");

CREATE INDEX "BiochemicalReaction_id_partic0"
  ON "BiochemicalReaction_id_partici" ("index");

CREATE TABLE "BiochemicalReaction_interactio" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BiochemicalReaction_interactio"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_interactio"
  ON "BiochemicalReaction_interactio" ("object_id");

CREATE INDEX "BiochemicalReaction_interacti0"
  ON "BiochemicalReaction_interactio" ("index");

CREATE TABLE "BiochemicalReaction_participan" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BiochemicalReaction_participan"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_participan"
  ON "BiochemicalReaction_participan" ("object_id");

CREATE INDEX "BiochemicalReaction_participa0"
  ON "BiochemicalReaction_participan" ("index");

CREATE TABLE "BiochemicalReaction_id_leftEnt" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BiochemicalReaction_id_leftEnt"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_id_leftEnt"
  ON "BiochemicalReaction_id_leftEnt" ("object_id");

CREATE INDEX "BiochemicalReaction_id_leftEn0"
  ON "BiochemicalReaction_id_leftEnt" ("index");

CREATE TABLE "BiochemicalReaction_id_rightEn" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BiochemicalReaction_id_rightEn"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_id_rightEn"
  ON "BiochemicalReaction_id_rightEn" ("object_id");

CREATE INDEX "BiochemicalReaction_id_rightE0"
  ON "BiochemicalReaction_id_rightEn" ("index");

CREATE TABLE "BiochemicalReaction_deltaG" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BiochemicalReaction_deltaG_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_deltaG_obj"
  ON "BiochemicalReaction_deltaG" ("object_id");

CREATE INDEX "BiochemicalReaction_deltaG_ind"
  ON "BiochemicalReaction_deltaG" ("index");

CREATE TABLE "BiochemicalReaction_kEQ" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BiochemicalReaction_kEQ_object"
    FOREIGN KEY ("object_id")
    REFERENCES "BiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BiochemicalReaction_kEQ_object"
  ON "BiochemicalReaction_kEQ" ("object_id");

CREATE INDEX "BiochemicalReaction_kEQ_index_"
  ON "BiochemicalReaction_kEQ" ("index");









/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BioSource_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BioSource_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BioSource_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BioSource_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BioSource_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BioSource_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BioSource_cellType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BioSource_cellType_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BioSource_cellType_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BioSource_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BioSource_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BioSource_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "BioSource" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "BioSource_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "BioSource_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "BioSource" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "tissue" NUMBER(20),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512));

CREATE TABLE "BioSource_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "BioSource_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "BioSource" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BioSource_comment_object_id_i"
  ON "BioSource_comment" ("object_id");

CREATE INDEX "BioSource_comment_index_i"
  ON "BioSource_comment" ("index");

CREATE TABLE "BioSource_cellType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "BioSource_cellType_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "BioSource" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BioSource_cellType_object_id_i"
  ON "BioSource_cellType" ("object_id");

CREATE INDEX "BioSource_cellType_index_i"
  ON "BioSource_cellType" ("index");

CREATE TABLE "BioSource_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "BioSource_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "BioSource" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BioSource_id_xref_object_id_i"
  ON "BioSource_id_xref" ("object_id");

CREATE INDEX "BioSource_id_xref_index_i"
  ON "BioSource_id_xref" ("index");

CREATE TABLE "BioSource_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "BioSource_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "BioSource" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "BioSource_name_object_id_i"
  ON "BioSource_name" ("object_id");

CREATE INDEX "BioSource_name_index_i"
  ON "BioSource_name" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_id_cofactor" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_id_cofactor_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_id_cofactor_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_id_controller" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_id_controller_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_id_controller_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_interactionType_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_interactionType_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Catalysis" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Catalysis_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Catalysis_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Catalysis" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "controlType" VARCHAR2(512),
  "id_controlled" NUMBER(20) NOT NULL,
  "catalysisDirection" VARCHAR2(512));

CREATE TABLE "Catalysis_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Catalysis_comments_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_comments_object_id_i"
  ON "Catalysis_comments" ("object_id");

CREATE INDEX "Catalysis_comments_index_i"
  ON "Catalysis_comments" ("index");

CREATE TABLE "Catalysis_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Catalysis_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_name_object_id_i"
  ON "Catalysis_name" ("object_id");

CREATE INDEX "Catalysis_name_index_i"
  ON "Catalysis_name" ("index");

CREATE TABLE "Catalysis_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Catalysis_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_id_xref_object_id_i"
  ON "Catalysis_id_xref" ("object_id");

CREATE INDEX "Catalysis_id_xref_index_i"
  ON "Catalysis_id_xref" ("index");

CREATE TABLE "Catalysis_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Catalysis_id_participant_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_id_participant_objec"
  ON "Catalysis_id_participant" ("object_id");

CREATE INDEX "Catalysis_id_participant_index"
  ON "Catalysis_id_participant" ("index");

CREATE TABLE "Catalysis_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Catalysis_interactionType_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_interactionType_obje"
  ON "Catalysis_interactionType" ("object_id");

CREATE INDEX "Catalysis_interactionType_inde"
  ON "Catalysis_interactionType" ("index");

CREATE TABLE "Catalysis_id_controller" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Catalysis_id_controller_object"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_id_controller_object"
  ON "Catalysis_id_controller" ("object_id");

CREATE INDEX "Catalysis_id_controller_index_"
  ON "Catalysis_id_controller" ("index");

CREATE TABLE "Catalysis_id_cofactor" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Catalysis_id_cofactor_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Catalysis" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Catalysis_id_cofactor_object_i"
  ON "Catalysis_id_cofactor" ("object_id");

CREATE INDEX "Catalysis_id_cofactor_index_i"
  ON "Catalysis_id_cofactor" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CellularLocationVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CellularLocationVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CellularLocationVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CellularLocationVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CellularLocationVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CellularLocationVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CellularLocationVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CellularLocationVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CellularLocationVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "CellularLocationVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "CellularLocationVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "CellularLocationVocabulary_comment_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CellularLocationVocabulary_comment_object_"
  ON "CellularLocationVocabulary_comment" ("object_id");

CREATE INDEX "CellularLocationVocabulary_comment_index_i"
  ON "CellularLocationVocabulary_comment" ("index");

CREATE TABLE "CellularLocationVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "CellularLocationVocabulary_id_xref_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CellularLocationVocabulary_id_xref_object_"
  ON "CellularLocationVocabulary_id_xref" ("object_id");

CREATE INDEX "CellularLocationVocabulary_id_xref_index_i"
  ON "CellularLocationVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CellVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CellVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CellVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CellVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CellVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CellVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CellVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CellVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CellVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "CellVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "CellVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "CellVocabulary_comment_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "CellVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CellVocabulary_comment_object_"
  ON "CellVocabulary_comment" ("object_id");

CREATE INDEX "CellVocabulary_comment_index_i"
  ON "CellVocabulary_comment" ("index");

CREATE TABLE "CellVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "CellVocabulary_id_xref_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "CellVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CellVocabulary_id_xref_object_"
  ON "CellVocabulary_id_xref" ("object_id");

CREATE INDEX "CellVocabulary_id_xref_index_i"
  ON "CellVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ChemicalStructure_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ChemicalStructure_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ChemicalStructure_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ChemicalStructure" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ChemicalStructure_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ChemicalStructure_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ChemicalStructure" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "structureData" VARCHAR2(512),
  "structureFormat" VARCHAR2(512));

CREATE TABLE "ChemicalStructure_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ChemicalStructure_comment_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "ChemicalStructure" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ChemicalStructure_comment_obje"
  ON "ChemicalStructure_comment" ("object_id");

CREATE INDEX "ChemicalStructure_comment_inde"
  ON "ChemicalStructure_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_rightEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_rightEntity"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_rightEntity"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_leftEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_leftEntity_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_leftEntity_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_participantSto" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_participantSto"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_participantSto"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_interactionTyp" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_interactionTyp"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_interactionTyp"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_participant"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_participant"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ComplexAssembly" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ComplexAssembly_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ComplexAssembly_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ComplexAssembly" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20));

CREATE TABLE "ComplexAssembly_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ComplexAssembly_comments_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_comments_objec"
  ON "ComplexAssembly_comments" ("object_id");

CREATE INDEX "ComplexAssembly_comments_index"
  ON "ComplexAssembly_comments" ("index");

CREATE TABLE "ComplexAssembly_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ComplexAssembly_name_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_name_object_id"
  ON "ComplexAssembly_name" ("object_id");

CREATE INDEX "ComplexAssembly_name_index_i"
  ON "ComplexAssembly_name" ("index");

CREATE TABLE "ComplexAssembly_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_xref_object"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_xref_object"
  ON "ComplexAssembly_id_xref" ("object_id");

CREATE INDEX "ComplexAssembly_id_xref_index_"
  ON "ComplexAssembly_id_xref" ("index");

CREATE TABLE "ComplexAssembly_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_participant"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_participant"
  ON "ComplexAssembly_id_participant" ("object_id");

CREATE INDEX "ComplexAssembly_id_participan0"
  ON "ComplexAssembly_id_participant" ("index");

CREATE TABLE "ComplexAssembly_interactionTyp" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ComplexAssembly_interactionTyp"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_interactionTyp"
  ON "ComplexAssembly_interactionTyp" ("object_id");

CREATE INDEX "ComplexAssembly_interactionTy0"
  ON "ComplexAssembly_interactionTyp" ("index");

CREATE TABLE "ComplexAssembly_participantSto" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ComplexAssembly_participantSto"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_participantSto"
  ON "ComplexAssembly_participantSto" ("object_id");

CREATE INDEX "ComplexAssembly_participantSt0"
  ON "ComplexAssembly_participantSto" ("index");

CREATE TABLE "ComplexAssembly_id_leftEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_leftEntity_"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_leftEntity_"
  ON "ComplexAssembly_id_leftEntity" ("object_id");

CREATE INDEX "ComplexAssembly_id_leftEntity0"
  ON "ComplexAssembly_id_leftEntity" ("index");

CREATE TABLE "ComplexAssembly_id_rightEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ComplexAssembly_id_rightEntity"
    FOREIGN KEY ("object_id")
    REFERENCES "ComplexAssembly" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ComplexAssembly_id_rightEntity"
  ON "ComplexAssembly_id_rightEntity" ("object_id");

CREATE INDEX "ComplexAssembly_id_rightEntit0"
  ON "ComplexAssembly_id_rightEntity" ("index");







/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_componentStoichiometry" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_componentStoichiometry"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_componentStoichiometry"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_id_component" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_id_component_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_id_component_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_id_notFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_id_notFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_id_memberPhysicalEntit" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_id_memberPhysicalEntit"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_id_memberPhysicalEntit"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Complex" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Complex_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Complex_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Complex" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "Complex_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Complex_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_comments_object_id_i"
  ON "Complex_comments" ("object_id");

CREATE INDEX "Complex_comments_index_i"
  ON "Complex_comments" ("index");

CREATE TABLE "Complex_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Complex_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_name_object_id_i"
  ON "Complex_name" ("object_id");

CREATE INDEX "Complex_name_index_i"
  ON "Complex_name" ("index");

CREATE TABLE "Complex_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Complex_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_id_xref_object_id_i"
  ON "Complex_id_xref" ("object_id");

CREATE INDEX "Complex_id_xref_index_i"
  ON "Complex_id_xref" ("index");

CREATE TABLE "Complex_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Complex_id_feature_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_id_feature_object_id_i"
  ON "Complex_id_feature" ("object_id");

CREATE INDEX "Complex_id_feature_index_i"
  ON "Complex_id_feature" ("index");

CREATE TABLE "Complex_id_memberPhysicalEntit" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Complex_id_memberPhysicalEntit"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_id_memberPhysicalEntit"
  ON "Complex_id_memberPhysicalEntit" ("object_id");

CREATE INDEX "Complex_id_memberPhysicalEnti0"
  ON "Complex_id_memberPhysicalEntit" ("index");

CREATE TABLE "Complex_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Complex_id_notFeature_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_id_notFeature_object_i"
  ON "Complex_id_notFeature" ("object_id");

CREATE INDEX "Complex_id_notFeature_index_i"
  ON "Complex_id_notFeature" ("index");

CREATE TABLE "Complex_id_component" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Complex_id_component_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_id_component_object_id"
  ON "Complex_id_component" ("object_id");

CREATE INDEX "Complex_id_component_index_i"
  ON "Complex_id_component" ("index");

CREATE TABLE "Complex_componentStoichiometry" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Complex_componentStoichiometry"
    FOREIGN KEY ("object_id")
    REFERENCES "Complex" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Complex_componentStoichiometry"
  ON "Complex_componentStoichiometry" ("object_id");

CREATE INDEX "Complex_componentStoichiometr0"
  ON "Complex_componentStoichiometry" ("index");






/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ControlledVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ControlledVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ControlledVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ControlledVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ControlledVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ControlledVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ControlledVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ControlledVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ControlledVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ControlledVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "ControlledVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ControlledVocabulary_comment_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "ControlledVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ControlledVocabulary_comment_object_i"
  ON "ControlledVocabulary_comment" ("object_id");

CREATE INDEX "ControlledVocabulary_comment_index_i"
  ON "ControlledVocabulary_comment" ("index");

CREATE TABLE "ControlledVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ControlledVocabulary_id_xref_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "ControlledVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ControlledVocabulary_id_xref_object_i"
  ON "ControlledVocabulary_id_xref" ("object_id");

CREATE INDEX "ControlledVocabulary_id_xref_index_i"
  ON "ControlledVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control_id_controller" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_id_controller_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_id_controller_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_interactionType_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_interactionType_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Control" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Control_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Control_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Control" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "controlType" VARCHAR2(512),
  "id_controlled" NUMBER(20) NOT NULL);

CREATE TABLE "Control_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Control_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Control" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Control_comments_object_id_i"
  ON "Control_comments" ("object_id");

CREATE INDEX "Control_comments_index_i"
  ON "Control_comments" ("index");

CREATE TABLE "Control_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Control_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Control" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Control_name_object_id_i"
  ON "Control_name" ("object_id");

CREATE INDEX "Control_name_index_i"
  ON "Control_name" ("index");

CREATE TABLE "Control_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Control_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Control" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Control_id_xref_object_id_i"
  ON "Control_id_xref" ("object_id");

CREATE INDEX "Control_id_xref_index_i"
  ON "Control_id_xref" ("index");

CREATE TABLE "Control_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Control_id_participant_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "Control" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Control_id_participant_object_"
  ON "Control_id_participant" ("object_id");

CREATE INDEX "Control_id_participant_index_i"
  ON "Control_id_participant" ("index");

CREATE TABLE "Control_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Control_interactionType_object"
    FOREIGN KEY ("object_id")
    REFERENCES "Control" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Control_interactionType_object"
  ON "Control_interactionType" ("object_id");

CREATE INDEX "Control_interactionType_index_"
  ON "Control_interactionType" ("index");

CREATE TABLE "Control_id_controller" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Control_id_controller_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Control" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Control_id_controller_object_i"
  ON "Control_id_controller" ("object_id");

CREATE INDEX "Control_id_controller_index_i"
  ON "Control_id_controller" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_id_rightEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_id_rightEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_id_rightEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_id_leftEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_id_leftEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_id_leftEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_participantStoichio" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_participantStoichio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_participantStoichio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_interactionType_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_interactionType_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Conversion" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Conversion_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Conversion_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Conversion" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20));

CREATE TABLE "Conversion_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Conversion_comments_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_comments_object_id_"
  ON "Conversion_comments" ("object_id");

CREATE INDEX "Conversion_comments_index_i"
  ON "Conversion_comments" ("index");

CREATE TABLE "Conversion_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Conversion_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_name_object_id_i"
  ON "Conversion_name" ("object_id");

CREATE INDEX "Conversion_name_index_i"
  ON "Conversion_name" ("index");

CREATE TABLE "Conversion_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Conversion_id_xref_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_id_xref_object_id_i"
  ON "Conversion_id_xref" ("object_id");

CREATE INDEX "Conversion_id_xref_index_i"
  ON "Conversion_id_xref" ("index");

CREATE TABLE "Conversion_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Conversion_id_participant_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_id_participant_obje"
  ON "Conversion_id_participant" ("object_id");

CREATE INDEX "Conversion_id_participant_inde"
  ON "Conversion_id_participant" ("index");

CREATE TABLE "Conversion_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Conversion_interactionType_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_interactionType_obj"
  ON "Conversion_interactionType" ("object_id");

CREATE INDEX "Conversion_interactionType_ind"
  ON "Conversion_interactionType" ("index");

CREATE TABLE "Conversion_participantStoichio" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Conversion_participantStoichio"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_participantStoichio"
  ON "Conversion_participantStoichio" ("object_id");

CREATE INDEX "Conversion_participantStoichi0"
  ON "Conversion_participantStoichio" ("index");

CREATE TABLE "Conversion_id_leftEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Conversion_id_leftEntity_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_id_leftEntity_objec"
  ON "Conversion_id_leftEntity" ("object_id");

CREATE INDEX "Conversion_id_leftEntity_index"
  ON "Conversion_id_leftEntity" ("index");

CREATE TABLE "Conversion_id_rightEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Conversion_id_rightEntity_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Conversion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Conversion_id_rightEntity_obje"
  ON "Conversion_id_rightEntity" ("object_id");

CREATE INDEX "Conversion_id_rightEntity_inde"
  ON "Conversion_id_rightEntity" ("index");







/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature_id_bindsTo" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_id_bindsTo_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_id_bindsTo_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature_featureLocati" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_featureLocati"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_featureLocati"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature_id_featureLoc" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_id_featureLoc"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_id_featureLoc"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature_id_memberFeat" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_id_memberFeat"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_id_memberFeat"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "CovalentBindingFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "CovalentBindingFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "CovalentBindingFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "CovalentBindingFeature" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "intraMolecular" NUMBER(1) NOT NULL);

CREATE TABLE "CovalentBindingFeature_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "CovalentBindingFeature_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "CovalentBindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CovalentBindingFeature_comment_objec"
  ON "CovalentBindingFeature_comment" ("object_id");

CREATE INDEX "CovalentBindingFeature_comment_index"
  ON "CovalentBindingFeature_comment" ("index");

CREATE TABLE "CovalentBindingFeature_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "CovalentBindingFeature_evidence_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "CovalentBindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CovalentBindingFeature_evidence_obje"
  ON "CovalentBindingFeature_evidence" ("object_id");

CREATE INDEX "CovalentBindingFeature_evidence_inde"
  ON "CovalentBindingFeature_evidence" ("index");

CREATE TABLE "CovalentBindingFeature_id_memberFeat" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "CovalentBindingFeature_id_memberFeat"
    FOREIGN KEY ("object_id")
    REFERENCES "CovalentBindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CovalentBindingFeature_id_memberFeat"
  ON "CovalentBindingFeature_id_memberFeat" ("object_id");

CREATE INDEX "CovalentBindingFeature_id_memberFea0"
  ON "CovalentBindingFeature_id_memberFeat" ("index");

CREATE TABLE "CovalentBindingFeature_id_featureLoc" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "CovalentBindingFeature_id_featureLoc"
    FOREIGN KEY ("object_id")
    REFERENCES "CovalentBindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CovalentBindingFeature_id_featureLoc"
  ON "CovalentBindingFeature_id_featureLoc" ("object_id");

CREATE INDEX "CovalentBindingFeature_id_featureLo0"
  ON "CovalentBindingFeature_id_featureLoc" ("index");

CREATE TABLE "CovalentBindingFeature_featureLocati" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "CovalentBindingFeature_featureLocati"
    FOREIGN KEY ("object_id")
    REFERENCES "CovalentBindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CovalentBindingFeature_featureLocati"
  ON "CovalentBindingFeature_featureLocati" ("object_id");

CREATE INDEX "CovalentBindingFeature_featureLocat0"
  ON "CovalentBindingFeature_featureLocati" ("index");

CREATE TABLE "CovalentBindingFeature_id_bindsTo" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "CovalentBindingFeature_id_bindsTo_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "CovalentBindingFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "CovalentBindingFeature_id_bindsTo_ob"
  ON "CovalentBindingFeature_id_bindsTo" ("object_id");

CREATE INDEX "CovalentBindingFeature_id_bindsTo_in"
  ON "CovalentBindingFeature_id_bindsTo" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_rightEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_rightEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_rightEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_leftEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_leftEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_leftEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_participantStoichi" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_participantStoichi"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_participantStoichi"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_interactionType_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_interactionType_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Degradation" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Degradation_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Degradation_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Degradation" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20));

CREATE TABLE "Degradation_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Degradation_comments_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_comments_object_id"
  ON "Degradation_comments" ("object_id");

CREATE INDEX "Degradation_comments_index_i"
  ON "Degradation_comments" ("index");

CREATE TABLE "Degradation_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Degradation_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_name_object_id_i"
  ON "Degradation_name" ("object_id");

CREATE INDEX "Degradation_name_index_i"
  ON "Degradation_name" ("index");

CREATE TABLE "Degradation_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_xref_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_xref_object_id_"
  ON "Degradation_id_xref" ("object_id");

CREATE INDEX "Degradation_id_xref_index_i"
  ON "Degradation_id_xref" ("index");

CREATE TABLE "Degradation_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_participant_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_participant_obj"
  ON "Degradation_id_participant" ("object_id");

CREATE INDEX "Degradation_id_participant_ind"
  ON "Degradation_id_participant" ("index");

CREATE TABLE "Degradation_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Degradation_interactionType_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_interactionType_ob"
  ON "Degradation_interactionType" ("object_id");

CREATE INDEX "Degradation_interactionType_in"
  ON "Degradation_interactionType" ("index");

CREATE TABLE "Degradation_participantStoichi" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Degradation_participantStoichi"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_participantStoichi"
  ON "Degradation_participantStoichi" ("object_id");

CREATE INDEX "Degradation_participantStoich0"
  ON "Degradation_participantStoichi" ("index");

CREATE TABLE "Degradation_id_leftEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_leftEntity_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_leftEntity_obje"
  ON "Degradation_id_leftEntity" ("object_id");

CREATE INDEX "Degradation_id_leftEntity_inde"
  ON "Degradation_id_leftEntity" ("index");

CREATE TABLE "Degradation_id_rightEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Degradation_id_rightEntity_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Degradation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Degradation_id_rightEntity_obj"
  ON "Degradation_id_rightEntity" ("object_id");

CREATE INDEX "Degradation_id_rightEntity_ind"
  ON "Degradation_id_rightEntity" ("index");







/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DeltaG_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DeltaG_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DeltaG_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DeltaG" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DeltaG_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DeltaG_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "DeltaG" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "deltaGPrime0" BINARY_DOUBLE NOT NULL,
  "ionicStrength" BINARY_DOUBLE NOT NULL,
  "ph" BINARY_DOUBLE NOT NULL,
  "pMg" BINARY_DOUBLE NOT NULL,
  "temperature" BINARY_DOUBLE NOT NULL);

CREATE TABLE "DeltaG_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DeltaG_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "DeltaG" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DeltaG_comment_object_id_i"
  ON "DeltaG_comment" ("object_id");

CREATE INDEX "DeltaG_comment_index_i"
  ON "DeltaG_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaReference_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaReference_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaReference_id_memberEntityRe" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaReference_id_memberEntityRe"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaReference_id_memberEntityRe"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "DnaReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "sequence" VARCHAR2(512),
  "id_subRegion" NUMBER(20) NOT NULL,
  "organism" NUMBER(20));

CREATE TABLE "DnaReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DnaReference_comment_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaReference_comment_object_id"
  ON "DnaReference_comment" ("object_id");

CREATE INDEX "DnaReference_comment_index_i"
  ON "DnaReference_comment" ("index");

CREATE TABLE "DnaReference_id_memberEntityRe" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaReference_id_memberEntityRe"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaReference_id_memberEntityRe"
  ON "DnaReference_id_memberEntityRe" ("object_id");

CREATE INDEX "DnaReference_id_memberEntityR0"
  ON "DnaReference_id_memberEntityRe" ("index");

CREATE TABLE "DnaReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "DnaReference_evidence_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaReference_evidence_object_i"
  ON "DnaReference_evidence" ("object_id");

CREATE INDEX "DnaReference_evidence_index_i"
  ON "DnaReference_evidence" ("index");

CREATE TABLE "DnaReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaReference_id_xref_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaReference_id_xref_object_id"
  ON "DnaReference_id_xref" ("object_id");

CREATE INDEX "DnaReference_id_xref_index_i"
  ON "DnaReference_id_xref" ("index");

CREATE TABLE "DnaReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DnaReference_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaReference_name_object_id_i"
  ON "DnaReference_name" ("object_id");

CREATE INDEX "DnaReference_name_index_i"
  ON "DnaReference_name" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegionReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegionReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegionReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegionReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegionReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegionReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegionReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegionReference_evidence_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegionReference_evidence_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegionReference_id_memberEn" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegionReference_id_memberEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegionReference_id_memberEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegionReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegionReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegionReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegionReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegionReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegionReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "DnaRegionReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "sequence" VARCHAR2(512),
  "id_subRegion" NUMBER(20) NOT NULL,
  "regionType" NUMBER(20),
  "organism" NUMBER(20),
  "id_absoluteRegion" NUMBER(20) NOT NULL);

CREATE TABLE "DnaRegionReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DnaRegionReference_comment_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegionReference_comment_obj"
  ON "DnaRegionReference_comment" ("object_id");

CREATE INDEX "DnaRegionReference_comment_ind"
  ON "DnaRegionReference_comment" ("index");

CREATE TABLE "DnaRegionReference_id_memberEn" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegionReference_id_memberEn"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegionReference_id_memberEn"
  ON "DnaRegionReference_id_memberEn" ("object_id");

CREATE INDEX "DnaRegionReference_id_memberE0"
  ON "DnaRegionReference_id_memberEn" ("index");

CREATE TABLE "DnaRegionReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "DnaRegionReference_evidence_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegionReference_evidence_ob"
  ON "DnaRegionReference_evidence" ("object_id");

CREATE INDEX "DnaRegionReference_evidence_in"
  ON "DnaRegionReference_evidence" ("index");

CREATE TABLE "DnaRegionReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegionReference_id_xref_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegionReference_id_xref_obj"
  ON "DnaRegionReference_id_xref" ("object_id");

CREATE INDEX "DnaRegionReference_id_xref_ind"
  ON "DnaRegionReference_id_xref" ("index");

CREATE TABLE "DnaRegionReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DnaRegionReference_name_object"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegionReference_name_object"
  ON "DnaRegionReference_name" ("object_id");

CREATE INDEX "DnaRegionReference_name_index_"
  ON "DnaRegionReference_name" ("index");






/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_id_entityReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_id_entityReference_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_id_entityReference_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_id_notFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_id_notFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_id_memberPhysicalEnt" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_id_memberPhysicalEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_id_memberPhysicalEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "DnaRegion" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "DnaRegion_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "DnaRegion_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "DnaRegion" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "DnaRegion_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DnaRegion_comments_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_comments_object_id_i"
  ON "DnaRegion_comments" ("object_id");

CREATE INDEX "DnaRegion_comments_index_i"
  ON "DnaRegion_comments" ("index");

CREATE TABLE "DnaRegion_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "DnaRegion_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_name_object_id_i"
  ON "DnaRegion_name" ("object_id");

CREATE INDEX "DnaRegion_name_index_i"
  ON "DnaRegion_name" ("index");

CREATE TABLE "DnaRegion_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegion_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_id_xref_object_id_i"
  ON "DnaRegion_id_xref" ("object_id");

CREATE INDEX "DnaRegion_id_xref_index_i"
  ON "DnaRegion_id_xref" ("index");

CREATE TABLE "DnaRegion_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegion_id_feature_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_id_feature_object_id"
  ON "DnaRegion_id_feature" ("object_id");

CREATE INDEX "DnaRegion_id_feature_index_i"
  ON "DnaRegion_id_feature" ("index");

CREATE TABLE "DnaRegion_id_memberPhysicalEnt" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegion_id_memberPhysicalEnt"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_id_memberPhysicalEnt"
  ON "DnaRegion_id_memberPhysicalEnt" ("object_id");

CREATE INDEX "DnaRegion_id_memberPhysicalEn0"
  ON "DnaRegion_id_memberPhysicalEnt" ("index");

CREATE TABLE "DnaRegion_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegion_id_notFeature_object"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_id_notFeature_object"
  ON "DnaRegion_id_notFeature" ("object_id");

CREATE INDEX "DnaRegion_id_notFeature_index_"
  ON "DnaRegion_id_notFeature" ("index");

CREATE TABLE "DnaRegion_id_entityReference" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "DnaRegion_id_entityReference_o"
    FOREIGN KEY ("object_id")
    REFERENCES "DnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "DnaRegion_id_entityReference_o"
  ON "DnaRegion_id_entityReference" ("object_id");

CREATE INDEX "DnaRegion_id_entityReference_i"
  ON "DnaRegion_id_entityReference" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_id_entityReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_id_entityReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_id_entityReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_id_notFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_id_notFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_id_memberPhysicalEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_id_memberPhysicalEntity_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_id_memberPhysicalEntity_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Dna" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Dna_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Dna_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Dna" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "Dna_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Dna_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_comments_object_id_i"
  ON "Dna_comments" ("object_id");

CREATE INDEX "Dna_comments_index_i"
  ON "Dna_comments" ("index");

CREATE TABLE "Dna_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Dna_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_name_object_id_i"
  ON "Dna_name" ("object_id");

CREATE INDEX "Dna_name_index_i"
  ON "Dna_name" ("index");

CREATE TABLE "Dna_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Dna_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_id_xref_object_id_i"
  ON "Dna_id_xref" ("object_id");

CREATE INDEX "Dna_id_xref_index_i"
  ON "Dna_id_xref" ("index");

CREATE TABLE "Dna_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Dna_id_feature_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_id_feature_object_id_i"
  ON "Dna_id_feature" ("object_id");

CREATE INDEX "Dna_id_feature_index_i"
  ON "Dna_id_feature" ("index");

CREATE TABLE "Dna_id_memberPhysicalEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Dna_id_memberPhysicalEntity_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_id_memberPhysicalEntity_ob"
  ON "Dna_id_memberPhysicalEntity" ("object_id");

CREATE INDEX "Dna_id_memberPhysicalEntity_in"
  ON "Dna_id_memberPhysicalEntity" ("index");

CREATE TABLE "Dna_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Dna_id_notFeature_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_id_notFeature_object_id_i"
  ON "Dna_id_notFeature" ("object_id");

CREATE INDEX "Dna_id_notFeature_index_i"
  ON "Dna_id_notFeature" ("index");

CREATE TABLE "Dna_id_entityReference" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Dna_id_entityReference_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "Dna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Dna_id_entityReference_object_"
  ON "Dna_id_entityReference" ("object_id");

CREATE INDEX "Dna_id_entityReference_index_i"
  ON "Dna_id_entityReference" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityFeature_featureLocationT" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityFeature_featureLocationT"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityFeature_featureLocationT"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityFeature_id_featureLocati" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityFeature_id_featureLocati"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityFeature_id_featureLocati"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityFeature_id_memberFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityFeature_id_memberFeature"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityFeature_id_memberFeature"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityFeature_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityFeature_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityFeature_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityFeature_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityFeature_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityFeature_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "EntityFeature" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "EntityFeature_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "EntityFeature_comment_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityFeature_comment_object_i"
  ON "EntityFeature_comment" ("object_id");

CREATE INDEX "EntityFeature_comment_index_i"
  ON "EntityFeature_comment" ("index");

CREATE TABLE "EntityFeature_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "EntityFeature_evidence_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityFeature_evidence_object_"
  ON "EntityFeature_evidence" ("object_id");

CREATE INDEX "EntityFeature_evidence_index_i"
  ON "EntityFeature_evidence" ("index");

CREATE TABLE "EntityFeature_id_memberFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "EntityFeature_id_memberFeature"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityFeature_id_memberFeature"
  ON "EntityFeature_id_memberFeature" ("object_id");

CREATE INDEX "EntityFeature_id_memberFeatur0"
  ON "EntityFeature_id_memberFeature" ("index");

CREATE TABLE "EntityFeature_id_featureLocati" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "EntityFeature_id_featureLocati"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityFeature_id_featureLocati"
  ON "EntityFeature_id_featureLocati" ("object_id");

CREATE INDEX "EntityFeature_id_featureLocat0"
  ON "EntityFeature_id_featureLocati" ("index");

CREATE TABLE "EntityFeature_featureLocationT" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "EntityFeature_featureLocationT"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityFeature_featureLocationT"
  ON "EntityFeature_featureLocationT" ("object_id");

CREATE INDEX "EntityFeature_featureLocation0"
  ON "EntityFeature_featureLocationT" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReference_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReference_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReference_id_memberEntit" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReference_id_memberEntit"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReference_id_memberEntit"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "EntityReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512));

CREATE TABLE "EntityReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "EntityReference_comment_object"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReference_comment_object"
  ON "EntityReference_comment" ("object_id");

CREATE INDEX "EntityReference_comment_index_"
  ON "EntityReference_comment" ("index");

CREATE TABLE "EntityReference_id_memberEntit" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "EntityReference_id_memberEntit"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReference_id_memberEntit"
  ON "EntityReference_id_memberEntit" ("object_id");

CREATE INDEX "EntityReference_id_memberEnti0"
  ON "EntityReference_id_memberEntit" ("index");

CREATE TABLE "EntityReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "EntityReference_evidence_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReference_evidence_objec"
  ON "EntityReference_evidence" ("object_id");

CREATE INDEX "EntityReference_evidence_index"
  ON "EntityReference_evidence" ("index");

CREATE TABLE "EntityReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "EntityReference_id_xref_object"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReference_id_xref_object"
  ON "EntityReference_id_xref" ("object_id");

CREATE INDEX "EntityReference_id_xref_index_"
  ON "EntityReference_id_xref" ("index");

CREATE TABLE "EntityReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "EntityReference_name_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReference_name_object_id"
  ON "EntityReference_name" ("object_id");

CREATE INDEX "EntityReference_name_index_i"
  ON "EntityReference_name" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReferenceTypeVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReferenceTypeVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReferenceTypeVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReferenceTypeVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReferenceTypeVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReferenceTypeVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EntityReferenceTypeVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EntityReferenceTypeVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EntityReferenceTypeVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "EntityReferenceTypeVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "EntityReferenceTypeVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "EntityReferenceTypeVocabulary_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReferenceTypeVocabulary_comment_objec"
  ON "EntityReferenceTypeVocabulary_comment" ("object_id");

CREATE INDEX "EntityReferenceTypeVocabulary_comment_index"
  ON "EntityReferenceTypeVocabulary_comment" ("index");

CREATE TABLE "EntityReferenceTypeVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "EntityReferenceTypeVocabulary_id_xref_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EntityReferenceTypeVocabulary_id_xref_objec"
  ON "EntityReferenceTypeVocabulary_id_xref" ("object_id");

CREATE INDEX "EntityReferenceTypeVocabulary_id_xref_index"
  ON "EntityReferenceTypeVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Entity_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Entity_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Entity_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Entity_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Entity_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Entity_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Entity_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Entity_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Entity_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Entity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Entity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Entity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Entity" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20));

CREATE TABLE "Entity_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Entity_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Entity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Entity_comments_object_id_i"
  ON "Entity_comments" ("object_id");

CREATE INDEX "Entity_comments_index_i"
  ON "Entity_comments" ("index");

CREATE TABLE "Entity_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Entity_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Entity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Entity_name_object_id_i"
  ON "Entity_name" ("object_id");

CREATE INDEX "Entity_name_index_i"
  ON "Entity_name" ("index");

CREATE TABLE "Entity_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Entity_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Entity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Entity_id_xref_object_id_i"
  ON "Entity_id_xref" ("object_id");

CREATE INDEX "Entity_id_xref_index_i"
  ON "Entity_id_xref" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EvidenceCodeVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EvidenceCodeVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EvidenceCodeVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EvidenceCodeVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EvidenceCodeVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EvidenceCodeVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EvidenceCodeVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EvidenceCodeVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EvidenceCodeVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "EvidenceCodeVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "EvidenceCodeVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "EvidenceCodeVocabulary_comment_object"
    FOREIGN KEY ("object_id")
    REFERENCES "EvidenceCodeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EvidenceCodeVocabulary_comment_object"
  ON "EvidenceCodeVocabulary_comment" ("object_id");

CREATE INDEX "EvidenceCodeVocabulary_comment_index_"
  ON "EvidenceCodeVocabulary_comment" ("index");

CREATE TABLE "EvidenceCodeVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "EvidenceCodeVocabulary_id_xref_object"
    FOREIGN KEY ("object_id")
    REFERENCES "EvidenceCodeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "EvidenceCodeVocabulary_id_xref_object"
  ON "EvidenceCodeVocabulary_id_xref" ("object_id");

CREATE INDEX "EvidenceCodeVocabulary_id_xref_index_"
  ON "EvidenceCodeVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Evidence_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Evidence_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Evidence_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Evidence_confidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Evidence_confidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Evidence_confidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Evidence_experimentalForm" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Evidence_experimentalForm_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Evidence_experimentalForm_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Evidence_evidenceCode" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Evidence_evidenceCode_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Evidence_evidenceCode_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Evidence_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Evidence_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Evidence_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Evidence" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "Evidence_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Evidence_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Evidence" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Evidence_comment_object_id_i"
  ON "Evidence_comment" ("object_id");

CREATE INDEX "Evidence_comment_index_i"
  ON "Evidence_comment" ("index");

CREATE TABLE "Evidence_evidenceCode" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Evidence_evidenceCode_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Evidence" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Evidence_evidenceCode_object_i"
  ON "Evidence_evidenceCode" ("object_id");

CREATE INDEX "Evidence_evidenceCode_index_i"
  ON "Evidence_evidenceCode" ("index");

CREATE TABLE "Evidence_experimentalForm" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Evidence_experimentalForm_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Evidence" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Evidence_experimentalForm_obje"
  ON "Evidence_experimentalForm" ("object_id");

CREATE INDEX "Evidence_experimentalForm_inde"
  ON "Evidence_experimentalForm" ("index");

CREATE TABLE "Evidence_confidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Evidence_confidence_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Evidence" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Evidence_confidence_object_id_"
  ON "Evidence_confidence" ("object_id");

CREATE INDEX "Evidence_confidence_index_i"
  ON "Evidence_confidence" ("index");

CREATE TABLE "Evidence_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Evidence_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Evidence" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Evidence_id_xref_object_id_i"
  ON "Evidence_id_xref" ("object_id");

CREATE INDEX "Evidence_id_xref_index_i"
  ON "Evidence_id_xref" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalForm_experimentalFormDescri" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalForm_experimentalFormDescri"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalForm_experimentalFormDescri"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalForm_id_experimentalFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalForm_id_experimentalFeature"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalForm_id_experimentalFeature"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalForm_id_experimentalFormEnt" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalForm_id_experimentalFormEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalForm_id_experimentalFormEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalForm_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalForm_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalForm_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalForm" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalForm_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalForm_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ExperimentalForm" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "ExperimentalForm_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ExperimentalForm_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "ExperimentalForm" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ExperimentalForm_comment_object_id_i"
  ON "ExperimentalForm_comment" ("object_id");

CREATE INDEX "ExperimentalForm_comment_index_i"
  ON "ExperimentalForm_comment" ("index");

CREATE TABLE "ExperimentalForm_id_experimentalFormEnt" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ExperimentalForm_id_experimentalFormEnt"
    FOREIGN KEY ("object_id")
    REFERENCES "ExperimentalForm" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ExperimentalForm_id_experimentalFormEnt"
  ON "ExperimentalForm_id_experimentalFormEnt" ("object_id");

CREATE INDEX "ExperimentalForm_id_experimentalFormEn0"
  ON "ExperimentalForm_id_experimentalFormEnt" ("index");

CREATE TABLE "ExperimentalForm_id_experimentalFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ExperimentalForm_id_experimentalFeature"
    FOREIGN KEY ("object_id")
    REFERENCES "ExperimentalForm" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ExperimentalForm_id_experimentalFeature"
  ON "ExperimentalForm_id_experimentalFeature" ("object_id");

CREATE INDEX "ExperimentalForm_id_experimentalFeatur0"
  ON "ExperimentalForm_id_experimentalFeature" ("index");

CREATE TABLE "ExperimentalForm_experimentalFormDescri" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ExperimentalForm_experimentalFormDescri"
    FOREIGN KEY ("object_id")
    REFERENCES "ExperimentalForm" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ExperimentalForm_experimentalFormDescri"
  ON "ExperimentalForm_experimentalFormDescri" ("object_id");

CREATE INDEX "ExperimentalForm_experimentalFormDescr0"
  ON "ExperimentalForm_experimentalFormDescri" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalFormVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalFormVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalFormVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalFormVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalFormVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalFormVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ExperimentalFormVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ExperimentalFormVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ExperimentalFormVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ExperimentalFormVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "ExperimentalFormVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ExperimentalFormVocabulary_comment_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "ExperimentalFormVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ExperimentalFormVocabulary_comment_object_id_i"
  ON "ExperimentalFormVocabulary_comment" ("object_id");

CREATE INDEX "ExperimentalFormVocabulary_comment_index_i"
  ON "ExperimentalFormVocabulary_comment" ("index");

CREATE TABLE "ExperimentalFormVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ExperimentalFormVocabulary_id_xref_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "ExperimentalFormVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ExperimentalFormVocabulary_id_xref_object_id_i"
  ON "ExperimentalFormVocabulary_id_xref" ("object_id");

CREATE INDEX "ExperimentalFormVocabulary_id_xref_index_i"
  ON "ExperimentalFormVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_featureLocatio" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_featureLocatio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_featureLocatio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_id_featureLoca" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_id_featureLoca"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_id_featureLoca"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_id_memberFeatu" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_id_memberFeatu"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_id_memberFeatu"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FragmentFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FragmentFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FragmentFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "FragmentFeature" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "FragmentFeature_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "FragmentFeature_comment_object"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_comment_object"
  ON "FragmentFeature_comment" ("object_id");

CREATE INDEX "FragmentFeature_comment_index_"
  ON "FragmentFeature_comment" ("index");

CREATE TABLE "FragmentFeature_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "FragmentFeature_evidence_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_evidence_objec"
  ON "FragmentFeature_evidence" ("object_id");

CREATE INDEX "FragmentFeature_evidence_index"
  ON "FragmentFeature_evidence" ("index");

CREATE TABLE "FragmentFeature_id_memberFeatu" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "FragmentFeature_id_memberFeatu"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_id_memberFeatu"
  ON "FragmentFeature_id_memberFeatu" ("object_id");

CREATE INDEX "FragmentFeature_id_memberFeat0"
  ON "FragmentFeature_id_memberFeatu" ("index");

CREATE TABLE "FragmentFeature_id_featureLoca" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "FragmentFeature_id_featureLoca"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_id_featureLoca"
  ON "FragmentFeature_id_featureLoca" ("object_id");

CREATE INDEX "FragmentFeature_id_featureLoc0"
  ON "FragmentFeature_id_featureLoca" ("index");

CREATE TABLE "FragmentFeature_featureLocatio" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "FragmentFeature_featureLocatio"
    FOREIGN KEY ("object_id")
    REFERENCES "FragmentFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "FragmentFeature_featureLocatio"
  ON "FragmentFeature_featureLocatio" ("object_id");

CREATE INDEX "FragmentFeature_featureLocati0"
  ON "FragmentFeature_featureLocatio" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Gene_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Gene_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Gene_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Gene_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Gene_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Gene_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Gene_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Gene_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Gene_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Gene" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Gene_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Gene_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Gene" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "organism" NUMBER(20));

CREATE TABLE "Gene_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Gene_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Gene" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Gene_comments_object_id_i"
  ON "Gene_comments" ("object_id");

CREATE INDEX "Gene_comments_index_i"
  ON "Gene_comments" ("index");

CREATE TABLE "Gene_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Gene_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Gene" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Gene_name_object_id_i"
  ON "Gene_name" ("object_id");

CREATE INDEX "Gene_name_index_i"
  ON "Gene_name" ("index");

CREATE TABLE "Gene_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Gene_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Gene" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Gene_id_xref_object_id_i"
  ON "Gene_id_xref" ("object_id");

CREATE INDEX "Gene_id_xref_index_i"
  ON "Gene_id_xref" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_score" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_score_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_score_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_phenotype" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_phenotype_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_phenotype_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_type" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_type_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_type_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_id_particip" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_id_particip"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_id_particip"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_comments_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_comments_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "GeneticInteraction" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "GeneticInteraction_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "GeneticInteraction_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "GeneticInteraction" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20));

CREATE TABLE "GeneticInteraction_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "GeneticInteraction_comments_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_comments_ob"
  ON "GeneticInteraction_comments" ("object_id");

CREATE INDEX "GeneticInteraction_comments_in"
  ON "GeneticInteraction_comments" ("index");

CREATE TABLE "GeneticInteraction_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "GeneticInteraction_name_object"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_name_object"
  ON "GeneticInteraction_name" ("object_id");

CREATE INDEX "GeneticInteraction_name_index_"
  ON "GeneticInteraction_name" ("index");

CREATE TABLE "GeneticInteraction_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "GeneticInteraction_id_xref_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_id_xref_obj"
  ON "GeneticInteraction_id_xref" ("object_id");

CREATE INDEX "GeneticInteraction_id_xref_ind"
  ON "GeneticInteraction_id_xref" ("index");

CREATE TABLE "GeneticInteraction_id_particip" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "GeneticInteraction_id_particip"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_id_particip"
  ON "GeneticInteraction_id_particip" ("object_id");

CREATE INDEX "GeneticInteraction_id_partici0"
  ON "GeneticInteraction_id_particip" ("index");

CREATE TABLE "GeneticInteraction_type" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "GeneticInteraction_type_object"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_type_object"
  ON "GeneticInteraction_type" ("object_id");

CREATE INDEX "GeneticInteraction_type_index_"
  ON "GeneticInteraction_type" ("index");

CREATE TABLE "GeneticInteraction_phenotype" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "GeneticInteraction_phenotype_o"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_phenotype_o"
  ON "GeneticInteraction_phenotype" ("object_id");

CREATE INDEX "GeneticInteraction_phenotype_i"
  ON "GeneticInteraction_phenotype" ("index");

CREATE TABLE "GeneticInteraction_score" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "GeneticInteraction_score_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "GeneticInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "GeneticInteraction_score_objec"
  ON "GeneticInteraction_score" ("object_id");

CREATE INDEX "GeneticInteraction_score_index"
  ON "GeneticInteraction_score" ("index");







/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Interaction_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Interaction_interactionType_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Interaction_interactionType_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Interaction_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Interaction_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Interaction_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Interaction_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Interaction_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Interaction_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Interaction_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Interaction_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Interaction_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Interaction_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Interaction_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Interaction_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Interaction" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Interaction_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Interaction_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Interaction" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20));

CREATE TABLE "Interaction_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Interaction_comments_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "Interaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Interaction_comments_object_id"
  ON "Interaction_comments" ("object_id");

CREATE INDEX "Interaction_comments_index_i"
  ON "Interaction_comments" ("index");

CREATE TABLE "Interaction_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Interaction_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Interaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Interaction_name_object_id_i"
  ON "Interaction_name" ("object_id");

CREATE INDEX "Interaction_name_index_i"
  ON "Interaction_name" ("index");

CREATE TABLE "Interaction_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Interaction_id_xref_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Interaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Interaction_id_xref_object_id_"
  ON "Interaction_id_xref" ("object_id");

CREATE INDEX "Interaction_id_xref_index_i"
  ON "Interaction_id_xref" ("index");

CREATE TABLE "Interaction_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Interaction_id_participant_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Interaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Interaction_id_participant_obj"
  ON "Interaction_id_participant" ("object_id");

CREATE INDEX "Interaction_id_participant_ind"
  ON "Interaction_id_participant" ("index");

CREATE TABLE "Interaction_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Interaction_interactionType_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Interaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Interaction_interactionType_ob"
  ON "Interaction_interactionType" ("object_id");

CREATE INDEX "Interaction_interactionType_in"
  ON "Interaction_interactionType" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "InteractionVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "InteractionVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "InteractionVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "InteractionVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "InteractionVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "InteractionVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "InteractionVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "InteractionVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "InteractionVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "InteractionVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "InteractionVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "InteractionVocabulary_comment_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "InteractionVocabulary_comment_object_"
  ON "InteractionVocabulary_comment" ("object_id");

CREATE INDEX "InteractionVocabulary_comment_index_i"
  ON "InteractionVocabulary_comment" ("index");

CREATE TABLE "InteractionVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "InteractionVocabulary_id_xref_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "InteractionVocabulary_id_xref_object_"
  ON "InteractionVocabulary_id_xref" ("object_id");

CREATE INDEX "InteractionVocabulary_id_xref_index_i"
  ON "InteractionVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "KPrime_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "KPrime_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "KPrime_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "KPrime" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "KPrime_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "KPrime_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "KPrime" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "ionicStrength" BINARY_DOUBLE NOT NULL,
  "kPrime" BINARY_DOUBLE NOT NULL,
  "ph" BINARY_DOUBLE NOT NULL,
  "pMg" BINARY_DOUBLE NOT NULL,
  "temperature" BINARY_DOUBLE NOT NULL);

CREATE TABLE "KPrime_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "KPrime_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "KPrime" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "KPrime_comment_object_id_i"
  ON "KPrime_comment" ("object_id");

CREATE INDEX "KPrime_comment_index_i"
  ON "KPrime_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ModificationFeature_featureLoc" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ModificationFeature_featureLoc"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ModificationFeature_featureLoc"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ModificationFeature_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ModificationFeature_id_feature"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ModificationFeature_id_feature"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ModificationFeature_id_memberF" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ModificationFeature_id_memberF"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ModificationFeature_id_memberF"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ModificationFeature_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ModificationFeature_evidence_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ModificationFeature_evidence_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ModificationFeature_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ModificationFeature_comment_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ModificationFeature_comment_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ModificationFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ModificationFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ModificationFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ModificationFeature" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "modificationType" NUMBER(20));

CREATE TABLE "ModificationFeature_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ModificationFeature_comment_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "ModificationFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ModificationFeature_comment_ob"
  ON "ModificationFeature_comment" ("object_id");

CREATE INDEX "ModificationFeature_comment_in"
  ON "ModificationFeature_comment" ("index");

CREATE TABLE "ModificationFeature_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ModificationFeature_evidence_o"
    FOREIGN KEY ("object_id")
    REFERENCES "ModificationFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ModificationFeature_evidence_o"
  ON "ModificationFeature_evidence" ("object_id");

CREATE INDEX "ModificationFeature_evidence_i"
  ON "ModificationFeature_evidence" ("index");

CREATE TABLE "ModificationFeature_id_memberF" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ModificationFeature_id_memberF"
    FOREIGN KEY ("object_id")
    REFERENCES "ModificationFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ModificationFeature_id_memberF"
  ON "ModificationFeature_id_memberF" ("object_id");

CREATE INDEX "ModificationFeature_id_member0"
  ON "ModificationFeature_id_memberF" ("index");

CREATE TABLE "ModificationFeature_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ModificationFeature_id_feature"
    FOREIGN KEY ("object_id")
    REFERENCES "ModificationFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ModificationFeature_id_feature"
  ON "ModificationFeature_id_feature" ("object_id");

CREATE INDEX "ModificationFeature_id_featur0"
  ON "ModificationFeature_id_feature" ("index");

CREATE TABLE "ModificationFeature_featureLoc" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ModificationFeature_featureLoc"
    FOREIGN KEY ("object_id")
    REFERENCES "ModificationFeature" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ModificationFeature_featureLoc"
  ON "ModificationFeature_featureLoc" ("object_id");

CREATE INDEX "ModificationFeature_featureLo0"
  ON "ModificationFeature_featureLoc" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation_id_controller" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_id_controller_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_id_controller_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_interactionType_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_interactionType_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Modulation" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Modulation_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Modulation_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Modulation" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "controlType" VARCHAR2(512),
  "id_controlled" NUMBER(20) NOT NULL);

CREATE TABLE "Modulation_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Modulation_comments_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Modulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Modulation_comments_object_id_"
  ON "Modulation_comments" ("object_id");

CREATE INDEX "Modulation_comments_index_i"
  ON "Modulation_comments" ("index");

CREATE TABLE "Modulation_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Modulation_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Modulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Modulation_name_object_id_i"
  ON "Modulation_name" ("object_id");

CREATE INDEX "Modulation_name_index_i"
  ON "Modulation_name" ("index");

CREATE TABLE "Modulation_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Modulation_id_xref_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Modulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Modulation_id_xref_object_id_i"
  ON "Modulation_id_xref" ("object_id");

CREATE INDEX "Modulation_id_xref_index_i"
  ON "Modulation_id_xref" ("index");

CREATE TABLE "Modulation_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Modulation_id_participant_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Modulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Modulation_id_participant_obje"
  ON "Modulation_id_participant" ("object_id");

CREATE INDEX "Modulation_id_participant_inde"
  ON "Modulation_id_participant" ("index");

CREATE TABLE "Modulation_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Modulation_interactionType_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Modulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Modulation_interactionType_obj"
  ON "Modulation_interactionType" ("object_id");

CREATE INDEX "Modulation_interactionType_ind"
  ON "Modulation_interactionType" ("index");

CREATE TABLE "Modulation_id_controller" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Modulation_id_controller_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "Modulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Modulation_id_controller_objec"
  ON "Modulation_id_controller" ("object_id");

CREATE INDEX "Modulation_id_controller_index"
  ON "Modulation_id_controller" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "MolecularInteraction_interacti" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "MolecularInteraction_interacti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "MolecularInteraction_interacti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "MolecularInteraction_id_partic" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "MolecularInteraction_id_partic"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "MolecularInteraction_id_partic"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "MolecularInteraction_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "MolecularInteraction_id_xref_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "MolecularInteraction_id_xref_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "MolecularInteraction_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "MolecularInteraction_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "MolecularInteraction_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "MolecularInteraction_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "MolecularInteraction_comments_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "MolecularInteraction_comments_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "MolecularInteraction" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "MolecularInteraction_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "MolecularInteraction_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "MolecularInteraction" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20));

CREATE TABLE "MolecularInteraction_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "MolecularInteraction_comments_"
    FOREIGN KEY ("object_id")
    REFERENCES "MolecularInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "MolecularInteraction_comments_"
  ON "MolecularInteraction_comments" ("object_id");

CREATE INDEX "MolecularInteraction_comments0"
  ON "MolecularInteraction_comments" ("index");

CREATE TABLE "MolecularInteraction_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "MolecularInteraction_name_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "MolecularInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "MolecularInteraction_name_obje"
  ON "MolecularInteraction_name" ("object_id");

CREATE INDEX "MolecularInteraction_name_inde"
  ON "MolecularInteraction_name" ("index");

CREATE TABLE "MolecularInteraction_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "MolecularInteraction_id_xref_o"
    FOREIGN KEY ("object_id")
    REFERENCES "MolecularInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "MolecularInteraction_id_xref_o"
  ON "MolecularInteraction_id_xref" ("object_id");

CREATE INDEX "MolecularInteraction_id_xref_i"
  ON "MolecularInteraction_id_xref" ("index");

CREATE TABLE "MolecularInteraction_id_partic" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "MolecularInteraction_id_partic"
    FOREIGN KEY ("object_id")
    REFERENCES "MolecularInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "MolecularInteraction_id_partic"
  ON "MolecularInteraction_id_partic" ("object_id");

CREATE INDEX "MolecularInteraction_id_parti0"
  ON "MolecularInteraction_id_partic" ("index");

CREATE TABLE "MolecularInteraction_interacti" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "MolecularInteraction_interacti"
    FOREIGN KEY ("object_id")
    REFERENCES "MolecularInteraction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "MolecularInteraction_interacti"
  ON "MolecularInteraction_interacti" ("object_id");

CREATE INDEX "MolecularInteraction_interact0"
  ON "MolecularInteraction_interacti" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway_id_pathwayOrder" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_id_pathwayOrder_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_id_pathwayOrder_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway_id_pathwayComponent" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_id_pathwayComponent_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_id_pathwayComponent_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway_id_modelExtensions" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_id_modelExtensions_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_id_modelExtensions_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Pathway" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Pathway_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Pathway_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Pathway" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "organism" NUMBER(20));

CREATE TABLE "Pathway_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Pathway_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Pathway" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Pathway_comments_object_id_i"
  ON "Pathway_comments" ("object_id");

CREATE INDEX "Pathway_comments_index_i"
  ON "Pathway_comments" ("index");

CREATE TABLE "Pathway_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Pathway_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Pathway" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Pathway_name_object_id_i"
  ON "Pathway_name" ("object_id");

CREATE INDEX "Pathway_name_index_i"
  ON "Pathway_name" ("index");

CREATE TABLE "Pathway_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Pathway_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Pathway" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Pathway_id_xref_object_id_i"
  ON "Pathway_id_xref" ("object_id");

CREATE INDEX "Pathway_id_xref_index_i"
  ON "Pathway_id_xref" ("index");

CREATE TABLE "Pathway_id_modelExtensions" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Pathway_id_modelExtensions_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Pathway" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Pathway_id_modelExtensions_obj"
  ON "Pathway_id_modelExtensions" ("object_id");

CREATE INDEX "Pathway_id_modelExtensions_ind"
  ON "Pathway_id_modelExtensions" ("index");

CREATE TABLE "Pathway_id_pathwayComponent" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Pathway_id_pathwayComponent_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Pathway" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Pathway_id_pathwayComponent_ob"
  ON "Pathway_id_pathwayComponent" ("object_id");

CREATE INDEX "Pathway_id_pathwayComponent_in"
  ON "Pathway_id_pathwayComponent" ("index");

CREATE TABLE "Pathway_id_pathwayOrder" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Pathway_id_pathwayOrder_object"
    FOREIGN KEY ("object_id")
    REFERENCES "Pathway" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Pathway_id_pathwayOrder_object"
  ON "Pathway_id_pathwayOrder" ("object_id");

CREATE INDEX "Pathway_id_pathwayOrder_index_"
  ON "Pathway_id_pathwayOrder" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PathwayStep_id_nextStep" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PathwayStep_id_nextStep_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PathwayStep_id_nextStep_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PathwayStep_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PathwayStep_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PathwayStep_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PathwayStep_id_stepProcess" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PathwayStep_id_stepProcess_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PathwayStep_id_stepProcess_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PathwayStep_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PathwayStep_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PathwayStep_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PathwayStep" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PathwayStep_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PathwayStep_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "PathwayStep" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "PathwayStep_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PathwayStep_comment_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "PathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PathwayStep_comment_object_id_"
  ON "PathwayStep_comment" ("object_id");

CREATE INDEX "PathwayStep_comment_index_i"
  ON "PathwayStep_comment" ("index");

CREATE TABLE "PathwayStep_id_stepProcess" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PathwayStep_id_stepProcess_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "PathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PathwayStep_id_stepProcess_obj"
  ON "PathwayStep_id_stepProcess" ("object_id");

CREATE INDEX "PathwayStep_id_stepProcess_ind"
  ON "PathwayStep_id_stepProcess" ("index");

CREATE TABLE "PathwayStep_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "PathwayStep_evidence_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "PathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PathwayStep_evidence_object_id"
  ON "PathwayStep_evidence" ("object_id");

CREATE INDEX "PathwayStep_evidence_index_i"
  ON "PathwayStep_evidence" ("index");

CREATE TABLE "PathwayStep_id_nextStep" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PathwayStep_id_nextStep_object"
    FOREIGN KEY ("object_id")
    REFERENCES "PathwayStep" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PathwayStep_id_nextStep_object"
  ON "PathwayStep_id_nextStep" ("object_id");

CREATE INDEX "PathwayStep_id_nextStep_index_"
  ON "PathwayStep_id_nextStep" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhenotypeVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhenotypeVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhenotypeVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhenotypeVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhenotypeVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhenotypeVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhenotypeVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhenotypeVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhenotypeVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "PhenotypeVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512),
  "patoData" VARCHAR2(512));

CREATE TABLE "PhenotypeVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PhenotypeVocabulary_comment_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "PhenotypeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhenotypeVocabulary_comment_object_id"
  ON "PhenotypeVocabulary_comment" ("object_id");

CREATE INDEX "PhenotypeVocabulary_comment_index_i"
  ON "PhenotypeVocabulary_comment" ("index");

CREATE TABLE "PhenotypeVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PhenotypeVocabulary_id_xref_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "PhenotypeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhenotypeVocabulary_id_xref_object_id"
  ON "PhenotypeVocabulary_id_xref" ("object_id");

CREATE INDEX "PhenotypeVocabulary_id_xref_index_i"
  ON "PhenotypeVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_id_notFeature_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_id_notFeature_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity_id_memberPhysic" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_id_memberPhysic"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_id_memberPhysic"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PhysicalEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PhysicalEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PhysicalEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "PhysicalEntity" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "PhysicalEntity_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PhysicalEntity_comments_object"
    FOREIGN KEY ("object_id")
    REFERENCES "PhysicalEntity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhysicalEntity_comments_object"
  ON "PhysicalEntity_comments" ("object_id");

CREATE INDEX "PhysicalEntity_comments_index_"
  ON "PhysicalEntity_comments" ("index");

CREATE TABLE "PhysicalEntity_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PhysicalEntity_name_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "PhysicalEntity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhysicalEntity_name_object_id_"
  ON "PhysicalEntity_name" ("object_id");

CREATE INDEX "PhysicalEntity_name_index_i"
  ON "PhysicalEntity_name" ("index");

CREATE TABLE "PhysicalEntity_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PhysicalEntity_id_xref_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "PhysicalEntity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhysicalEntity_id_xref_object_"
  ON "PhysicalEntity_id_xref" ("object_id");

CREATE INDEX "PhysicalEntity_id_xref_index_i"
  ON "PhysicalEntity_id_xref" ("index");

CREATE TABLE "PhysicalEntity_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PhysicalEntity_id_feature_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "PhysicalEntity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhysicalEntity_id_feature_obje"
  ON "PhysicalEntity_id_feature" ("object_id");

CREATE INDEX "PhysicalEntity_id_feature_inde"
  ON "PhysicalEntity_id_feature" ("index");

CREATE TABLE "PhysicalEntity_id_memberPhysic" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PhysicalEntity_id_memberPhysic"
    FOREIGN KEY ("object_id")
    REFERENCES "PhysicalEntity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhysicalEntity_id_memberPhysic"
  ON "PhysicalEntity_id_memberPhysic" ("object_id");

CREATE INDEX "PhysicalEntity_id_memberPhysi0"
  ON "PhysicalEntity_id_memberPhysic" ("index");

CREATE TABLE "PhysicalEntity_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "PhysicalEntity_id_notFeature_o"
    FOREIGN KEY ("object_id")
    REFERENCES "PhysicalEntity" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PhysicalEntity_id_notFeature_o"
  ON "PhysicalEntity_id_notFeature" ("object_id");

CREATE INDEX "PhysicalEntity_id_notFeature_i"
  ON "PhysicalEntity_id_notFeature" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ProteinReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ProteinReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ProteinReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ProteinReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ProteinReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ProteinReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ProteinReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ProteinReference_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ProteinReference_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ProteinReference_id_memberEnti" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ProteinReference_id_memberEnti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ProteinReference_id_memberEnti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ProteinReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ProteinReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ProteinReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ProteinReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ProteinReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ProteinReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ProteinReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "sequence" VARCHAR2(512),
  "organism" NUMBER(20));

CREATE TABLE "ProteinReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ProteinReference_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "ProteinReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ProteinReference_comment_objec"
  ON "ProteinReference_comment" ("object_id");

CREATE INDEX "ProteinReference_comment_index"
  ON "ProteinReference_comment" ("index");

CREATE TABLE "ProteinReference_id_memberEnti" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ProteinReference_id_memberEnti"
    FOREIGN KEY ("object_id")
    REFERENCES "ProteinReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ProteinReference_id_memberEnti"
  ON "ProteinReference_id_memberEnti" ("object_id");

CREATE INDEX "ProteinReference_id_memberEnt0"
  ON "ProteinReference_id_memberEnti" ("index");

CREATE TABLE "ProteinReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "ProteinReference_evidence_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "ProteinReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ProteinReference_evidence_obje"
  ON "ProteinReference_evidence" ("object_id");

CREATE INDEX "ProteinReference_evidence_inde"
  ON "ProteinReference_evidence" ("index");

CREATE TABLE "ProteinReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "ProteinReference_id_xref_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "ProteinReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ProteinReference_id_xref_objec"
  ON "ProteinReference_id_xref" ("object_id");

CREATE INDEX "ProteinReference_id_xref_index"
  ON "ProteinReference_id_xref" ("index");

CREATE TABLE "ProteinReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "ProteinReference_name_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "ProteinReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "ProteinReference_name_object_i"
  ON "ProteinReference_name" ("object_id");

CREATE INDEX "ProteinReference_name_index_i"
  ON "ProteinReference_name" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_id_entityReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_id_entityReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_id_entityReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_id_notFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_id_notFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_id_memberPhysicalEntit" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_id_memberPhysicalEntit"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_id_memberPhysicalEntit"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Protein" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Protein_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Protein_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Protein" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "Protein_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Protein_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_comments_object_id_i"
  ON "Protein_comments" ("object_id");

CREATE INDEX "Protein_comments_index_i"
  ON "Protein_comments" ("index");

CREATE TABLE "Protein_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Protein_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_name_object_id_i"
  ON "Protein_name" ("object_id");

CREATE INDEX "Protein_name_index_i"
  ON "Protein_name" ("index");

CREATE TABLE "Protein_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Protein_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_id_xref_object_id_i"
  ON "Protein_id_xref" ("object_id");

CREATE INDEX "Protein_id_xref_index_i"
  ON "Protein_id_xref" ("index");

CREATE TABLE "Protein_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Protein_id_feature_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_id_feature_object_id_i"
  ON "Protein_id_feature" ("object_id");

CREATE INDEX "Protein_id_feature_index_i"
  ON "Protein_id_feature" ("index");

CREATE TABLE "Protein_id_memberPhysicalEntit" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Protein_id_memberPhysicalEntit"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_id_memberPhysicalEntit"
  ON "Protein_id_memberPhysicalEntit" ("object_id");

CREATE INDEX "Protein_id_memberPhysicalEnti0"
  ON "Protein_id_memberPhysicalEntit" ("index");

CREATE TABLE "Protein_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Protein_id_notFeature_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_id_notFeature_object_i"
  ON "Protein_id_notFeature" ("object_id");

CREATE INDEX "Protein_id_notFeature_index_i"
  ON "Protein_id_notFeature" ("index");

CREATE TABLE "Protein_id_entityReference" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Protein_id_entityReference_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Protein" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Protein_id_entityReference_obj"
  ON "Protein_id_entityReference" ("object_id");

CREATE INDEX "Protein_id_entityReference_ind"
  ON "Protein_id_entityReference" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Provenance_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Provenance_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Provenance_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Provenance_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Provenance_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Provenance_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Provenance_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Provenance_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Provenance_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Provenance" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Provenance_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Provenance_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Provenance" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512));

CREATE TABLE "Provenance_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Provenance_comment_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Provenance" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Provenance_comment_object_id_i"
  ON "Provenance_comment" ("object_id");

CREATE INDEX "Provenance_comment_index_i"
  ON "Provenance_comment" ("index");

CREATE TABLE "Provenance_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Provenance_id_xref_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Provenance" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Provenance_id_xref_object_id_i"
  ON "Provenance_id_xref" ("object_id");

CREATE INDEX "Provenance_id_xref_index_i"
  ON "Provenance_id_xref" ("index");

CREATE TABLE "Provenance_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Provenance_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Provenance" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Provenance_name_object_id_i"
  ON "Provenance_name" ("object_id");

CREATE INDEX "Provenance_name_index_i"
  ON "Provenance_name" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PublicationXref_url" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PublicationXref_url_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PublicationXref_url_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PublicationXref_source" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PublicationXref_source_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PublicationXref_source_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PublicationXref_author" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PublicationXref_author_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PublicationXref_author_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PublicationXref_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PublicationXref_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PublicationXref_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "PublicationXref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "PublicationXref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "PublicationXref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "PublicationXref" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "idVersion" VARCHAR2(512),
  "id" VARCHAR2(512),
  "dbVersion" VARCHAR2(512),
  "db" VARCHAR2(512),
  "title" VARCHAR2(512),
  "year" NUMBER(10) NOT NULL);

CREATE TABLE "PublicationXref_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PublicationXref_comment_object"
    FOREIGN KEY ("object_id")
    REFERENCES "PublicationXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PublicationXref_comment_object"
  ON "PublicationXref_comment" ("object_id");

CREATE INDEX "PublicationXref_comment_index_"
  ON "PublicationXref_comment" ("index");

CREATE TABLE "PublicationXref_author" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PublicationXref_author_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "PublicationXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PublicationXref_author_object_"
  ON "PublicationXref_author" ("object_id");

CREATE INDEX "PublicationXref_author_index_i"
  ON "PublicationXref_author" ("index");

CREATE TABLE "PublicationXref_source" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PublicationXref_source_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "PublicationXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PublicationXref_source_object_"
  ON "PublicationXref_source" ("object_id");

CREATE INDEX "PublicationXref_source_index_i"
  ON "PublicationXref_source" ("index");

CREATE TABLE "PublicationXref_url" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "PublicationXref_url_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "PublicationXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "PublicationXref_url_object_id_"
  ON "PublicationXref_url" ("object_id");

CREATE INDEX "PublicationXref_url_index_i"
  ON "PublicationXref_url" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RelationshipTypeVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RelationshipTypeVocabulary_id_xref_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RelationshipTypeVocabulary_id_xref_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RelationshipTypeVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RelationshipTypeVocabulary_comment_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RelationshipTypeVocabulary_comment_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RelationshipTypeVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RelationshipTypeVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RelationshipTypeVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "RelationshipTypeVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "RelationshipTypeVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RelationshipTypeVocabulary_comment_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "RelationshipTypeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RelationshipTypeVocabulary_comment_ob"
  ON "RelationshipTypeVocabulary_comment" ("object_id");

CREATE INDEX "RelationshipTypeVocabulary_comment_in"
  ON "RelationshipTypeVocabulary_comment" ("index");

CREATE TABLE "RelationshipTypeVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RelationshipTypeVocabulary_id_xref_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "RelationshipTypeVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RelationshipTypeVocabulary_id_xref_ob"
  ON "RelationshipTypeVocabulary_id_xref" ("object_id");

CREATE INDEX "RelationshipTypeVocabulary_id_xref_in"
  ON "RelationshipTypeVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RelationshipXref_relationshipT" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RelationshipXref_relationshipT"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RelationshipXref_relationshipT"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RelationshipXref_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RelationshipXref_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RelationshipXref_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RelationshipXref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RelationshipXref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RelationshipXref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "RelationshipXref" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "idVersion" VARCHAR2(512),
  "id" VARCHAR2(512),
  "dbVersion" VARCHAR2(512),
  "db" VARCHAR2(512));

CREATE TABLE "RelationshipXref_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RelationshipXref_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "RelationshipXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RelationshipXref_comment_objec"
  ON "RelationshipXref_comment" ("object_id");

CREATE INDEX "RelationshipXref_comment_index"
  ON "RelationshipXref_comment" ("index");

CREATE TABLE "RelationshipXref_relationshipT" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "RelationshipXref_relationshipT"
    FOREIGN KEY ("object_id")
    REFERENCES "RelationshipXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RelationshipXref_relationshipT"
  ON "RelationshipXref_relationshipT" ("object_id");

CREATE INDEX "RelationshipXref_relationship0"
  ON "RelationshipXref_relationshipT" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaReference_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaReference_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaReference_id_memberEntityRe" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaReference_id_memberEntityRe"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaReference_id_memberEntityRe"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "RnaReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "sequence" VARCHAR2(512),
  "id_subRegion" NUMBER(20) NOT NULL,
  "organism" NUMBER(20));

CREATE TABLE "RnaReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RnaReference_comment_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaReference_comment_object_id"
  ON "RnaReference_comment" ("object_id");

CREATE INDEX "RnaReference_comment_index_i"
  ON "RnaReference_comment" ("index");

CREATE TABLE "RnaReference_id_memberEntityRe" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaReference_id_memberEntityRe"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaReference_id_memberEntityRe"
  ON "RnaReference_id_memberEntityRe" ("object_id");

CREATE INDEX "RnaReference_id_memberEntityR0"
  ON "RnaReference_id_memberEntityRe" ("index");

CREATE TABLE "RnaReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "RnaReference_evidence_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaReference_evidence_object_i"
  ON "RnaReference_evidence" ("object_id");

CREATE INDEX "RnaReference_evidence_index_i"
  ON "RnaReference_evidence" ("index");

CREATE TABLE "RnaReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaReference_id_xref_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaReference_id_xref_object_id"
  ON "RnaReference_id_xref" ("object_id");

CREATE INDEX "RnaReference_id_xref_index_i"
  ON "RnaReference_id_xref" ("index");

CREATE TABLE "RnaReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RnaReference_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaReference_name_object_id_i"
  ON "RnaReference_name" ("object_id");

CREATE INDEX "RnaReference_name_index_i"
  ON "RnaReference_name" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegionReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegionReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegionReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegionReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegionReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegionReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegionReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegionReference_evidence_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegionReference_evidence_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegionReference_id_memberEn" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegionReference_id_memberEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegionReference_id_memberEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegionReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegionReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegionReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegionReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegionReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegionReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "RnaRegionReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "sequence" VARCHAR2(512),
  "id_subRegion" NUMBER(20) NOT NULL,
  "id_absoluteRegion" NUMBER(20) NOT NULL,
  "organism" NUMBER(20),
  "regionType" NUMBER(20));

CREATE TABLE "RnaRegionReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RnaRegionReference_comment_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegionReference_comment_obj"
  ON "RnaRegionReference_comment" ("object_id");

CREATE INDEX "RnaRegionReference_comment_ind"
  ON "RnaRegionReference_comment" ("index");

CREATE TABLE "RnaRegionReference_id_memberEn" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegionReference_id_memberEn"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegionReference_id_memberEn"
  ON "RnaRegionReference_id_memberEn" ("object_id");

CREATE INDEX "RnaRegionReference_id_memberE0"
  ON "RnaRegionReference_id_memberEn" ("index");

CREATE TABLE "RnaRegionReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "RnaRegionReference_evidence_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegionReference_evidence_ob"
  ON "RnaRegionReference_evidence" ("object_id");

CREATE INDEX "RnaRegionReference_evidence_in"
  ON "RnaRegionReference_evidence" ("index");

CREATE TABLE "RnaRegionReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegionReference_id_xref_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegionReference_id_xref_obj"
  ON "RnaRegionReference_id_xref" ("object_id");

CREATE INDEX "RnaRegionReference_id_xref_ind"
  ON "RnaRegionReference_id_xref" ("index");

CREATE TABLE "RnaRegionReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RnaRegionReference_name_object"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegionReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegionReference_name_object"
  ON "RnaRegionReference_name" ("object_id");

CREATE INDEX "RnaRegionReference_name_index_"
  ON "RnaRegionReference_name" ("index");






/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_id_entityReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_id_entityReference_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_id_entityReference_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_id_notFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_id_notFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_id_memberPhysicalEnt" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_id_memberPhysicalEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_id_memberPhysicalEnt"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RnaRegion" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RnaRegion_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RnaRegion_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "RnaRegion" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "RnaRegion_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RnaRegion_comments_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_comments_object_id_i"
  ON "RnaRegion_comments" ("object_id");

CREATE INDEX "RnaRegion_comments_index_i"
  ON "RnaRegion_comments" ("index");

CREATE TABLE "RnaRegion_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "RnaRegion_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_name_object_id_i"
  ON "RnaRegion_name" ("object_id");

CREATE INDEX "RnaRegion_name_index_i"
  ON "RnaRegion_name" ("index");

CREATE TABLE "RnaRegion_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegion_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_id_xref_object_id_i"
  ON "RnaRegion_id_xref" ("object_id");

CREATE INDEX "RnaRegion_id_xref_index_i"
  ON "RnaRegion_id_xref" ("index");

CREATE TABLE "RnaRegion_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegion_id_feature_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_id_feature_object_id"
  ON "RnaRegion_id_feature" ("object_id");

CREATE INDEX "RnaRegion_id_feature_index_i"
  ON "RnaRegion_id_feature" ("index");

CREATE TABLE "RnaRegion_id_memberPhysicalEnt" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegion_id_memberPhysicalEnt"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_id_memberPhysicalEnt"
  ON "RnaRegion_id_memberPhysicalEnt" ("object_id");

CREATE INDEX "RnaRegion_id_memberPhysicalEn0"
  ON "RnaRegion_id_memberPhysicalEnt" ("index");

CREATE TABLE "RnaRegion_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegion_id_notFeature_object"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_id_notFeature_object"
  ON "RnaRegion_id_notFeature" ("object_id");

CREATE INDEX "RnaRegion_id_notFeature_index_"
  ON "RnaRegion_id_notFeature" ("index");

CREATE TABLE "RnaRegion_id_entityReference" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "RnaRegion_id_entityReference_o"
    FOREIGN KEY ("object_id")
    REFERENCES "RnaRegion" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "RnaRegion_id_entityReference_o"
  ON "RnaRegion_id_entityReference" ("object_id");

CREATE INDEX "RnaRegion_id_entityReference_i"
  ON "RnaRegion_id_entityReference" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_id_entityReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_id_entityReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_id_entityReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_id_notFeature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_id_notFeature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_id_memberPhysicalEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_id_memberPhysicalEntity_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_id_memberPhysicalEntity_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rna" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rna_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rna_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Rna" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "Rna_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Rna_comments_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_comments_object_id_i"
  ON "Rna_comments" ("object_id");

CREATE INDEX "Rna_comments_index_i"
  ON "Rna_comments" ("index");

CREATE TABLE "Rna_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Rna_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_name_object_id_i"
  ON "Rna_name" ("object_id");

CREATE INDEX "Rna_name_index_i"
  ON "Rna_name" ("index");

CREATE TABLE "Rna_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Rna_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_id_xref_object_id_i"
  ON "Rna_id_xref" ("object_id");

CREATE INDEX "Rna_id_xref_index_i"
  ON "Rna_id_xref" ("index");

CREATE TABLE "Rna_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Rna_id_feature_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_id_feature_object_id_i"
  ON "Rna_id_feature" ("object_id");

CREATE INDEX "Rna_id_feature_index_i"
  ON "Rna_id_feature" ("index");

CREATE TABLE "Rna_id_memberPhysicalEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Rna_id_memberPhysicalEntity_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_id_memberPhysicalEntity_ob"
  ON "Rna_id_memberPhysicalEntity" ("object_id");

CREATE INDEX "Rna_id_memberPhysicalEntity_in"
  ON "Rna_id_memberPhysicalEntity" ("index");

CREATE TABLE "Rna_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Rna_id_notFeature_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_id_notFeature_object_id_i"
  ON "Rna_id_notFeature" ("object_id");

CREATE INDEX "Rna_id_notFeature_index_i"
  ON "Rna_id_notFeature" ("index");

CREATE TABLE "Rna_id_entityReference" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Rna_id_entityReference_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "Rna" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Rna_id_entityReference_object_"
  ON "Rna_id_entityReference" ("object_id");

CREATE INDEX "Rna_id_entityReference_index_i"
  ON "Rna_id_entityReference" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Score_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Score_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Score_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Score" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Score_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Score_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Score" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "scoreSource" NUMBER(20),
  "value" VARCHAR2(512));

CREATE TABLE "Score_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Score_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Score" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Score_comment_object_id_i"
  ON "Score_comment" ("object_id");

CREATE INDEX "Score_comment_index_i"
  ON "Score_comment" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceInterval_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceInterval_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceInterval_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceInterval" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceInterval_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceInterval_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SequenceInterval" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "sequenceIntervalBegin" NUMBER(20),
  "sequenceIntervalEnd" NUMBER(20));

CREATE TABLE "SequenceInterval_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SequenceInterval_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceInterval" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceInterval_comment_objec"
  ON "SequenceInterval_comment" ("object_id");

CREATE INDEX "SequenceInterval_comment_index"
  ON "SequenceInterval_comment" ("index");




/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceLocation_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceLocation_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceLocation_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceLocation" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceLocation_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceLocation_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SequenceLocation" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "SequenceLocation_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SequenceLocation_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceLocation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceLocation_comment_objec"
  ON "SequenceLocation_comment" ("object_id");

CREATE INDEX "SequenceLocation_comment_index"
  ON "SequenceLocation_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceModificationVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceModificationVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceModificationVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceModificationVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceModificationVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceModificationVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceModificationVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceModificationVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceModificationVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SequenceModificationVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "SequenceModificationVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SequenceModificationVocabulary_comment_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceModificationVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceModificationVocabulary_comment_object_"
  ON "SequenceModificationVocabulary_comment" ("object_id");

CREATE INDEX "SequenceModificationVocabulary_comment_index_i"
  ON "SequenceModificationVocabulary_comment" ("index");

CREATE TABLE "SequenceModificationVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SequenceModificationVocabulary_id_xref_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceModificationVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceModificationVocabulary_id_xref_object_"
  ON "SequenceModificationVocabulary_id_xref" ("object_id");

CREATE INDEX "SequenceModificationVocabulary_id_xref_index_i"
  ON "SequenceModificationVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceRegionVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceRegionVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceRegionVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceRegionVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceRegionVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceRegionVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceRegionVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceRegionVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceRegionVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SequenceRegionVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "SequenceRegionVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SequenceRegionVocabulary_comment_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceRegionVocabulary_comment_obje"
  ON "SequenceRegionVocabulary_comment" ("object_id");

CREATE INDEX "SequenceRegionVocabulary_comment_inde"
  ON "SequenceRegionVocabulary_comment" ("index");

CREATE TABLE "SequenceRegionVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SequenceRegionVocabulary_id_xref_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceRegionVocabulary_id_xref_obje"
  ON "SequenceRegionVocabulary_id_xref" ("object_id");

CREATE INDEX "SequenceRegionVocabulary_id_xref_inde"
  ON "SequenceRegionVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceSite_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceSite_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceSite_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SequenceSite" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SequenceSite_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SequenceSite_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SequenceSite" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "positionStatus" VARCHAR2(512),
  "sequencePosition" NUMBER(10) NOT NULL);

CREATE TABLE "SequenceSite_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SequenceSite_comment_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "SequenceSite" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SequenceSite_comment_object_id"
  ON "SequenceSite_comment" ("object_id");

CREATE INDEX "SequenceSite_comment_index_i"
  ON "SequenceSite_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMoleculeReference_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMoleculeReference_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMoleculeReference_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMoleculeReference_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMoleculeReference_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMoleculeReference_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMoleculeReference_evidence" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMoleculeReference_evidence_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMoleculeReference_evidence_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMoleculeReference_id_memberEnti" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMoleculeReference_id_memberEnti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMoleculeReference_id_memberEnti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMoleculeReference_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMoleculeReference_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMoleculeReference_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMoleculeReference" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMoleculeReference_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMoleculeReference_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SmallMoleculeReference" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "entityReferenceType" NUMBER(20),
  "id_entityFeature" NUMBER(20) NOT NULL,
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "chemicalFormula" VARCHAR2(512),
  "molecularWeight" BINARY_DOUBLE NOT NULL,
  "structure" NUMBER(20));

CREATE TABLE "SmallMoleculeReference_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SmallMoleculeReference_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMoleculeReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMoleculeReference_comment_objec"
  ON "SmallMoleculeReference_comment" ("object_id");

CREATE INDEX "SmallMoleculeReference_comment_index"
  ON "SmallMoleculeReference_comment" ("index");

CREATE TABLE "SmallMoleculeReference_id_memberEnti" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMoleculeReference_id_memberEnti"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMoleculeReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMoleculeReference_id_memberEnti"
  ON "SmallMoleculeReference_id_memberEnti" ("object_id");

CREATE INDEX "SmallMoleculeReference_id_memberEnt0"
  ON "SmallMoleculeReference_id_memberEnti" ("index");

CREATE TABLE "SmallMoleculeReference_evidence" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "SmallMoleculeReference_evidence_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMoleculeReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMoleculeReference_evidence_obje"
  ON "SmallMoleculeReference_evidence" ("object_id");

CREATE INDEX "SmallMoleculeReference_evidence_inde"
  ON "SmallMoleculeReference_evidence" ("index");

CREATE TABLE "SmallMoleculeReference_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMoleculeReference_id_xref_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMoleculeReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMoleculeReference_id_xref_objec"
  ON "SmallMoleculeReference_id_xref" ("object_id");

CREATE INDEX "SmallMoleculeReference_id_xref_index"
  ON "SmallMoleculeReference_id_xref" ("index");

CREATE TABLE "SmallMoleculeReference_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SmallMoleculeReference_name_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMoleculeReference" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMoleculeReference_name_object_i"
  ON "SmallMoleculeReference_name" ("object_id");

CREATE INDEX "SmallMoleculeReference_name_index_i"
  ON "SmallMoleculeReference_name" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_id_entityReferen" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_id_entityReferen"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_id_entityReferen"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_id_notFeature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_id_notFeature_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_id_notFeature_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_id_memberPhysica" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_id_memberPhysica"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_id_memberPhysica"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_id_feature" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_id_feature_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_id_feature_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SmallMolecule" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SmallMolecule_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SmallMolecule_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SmallMolecule" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "cellularLocation" NUMBER(20));

CREATE TABLE "SmallMolecule_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SmallMolecule_comments_object_"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_comments_object_"
  ON "SmallMolecule_comments" ("object_id");

CREATE INDEX "SmallMolecule_comments_index_i"
  ON "SmallMolecule_comments" ("index");

CREATE TABLE "SmallMolecule_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "SmallMolecule_name_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_name_object_id_i"
  ON "SmallMolecule_name" ("object_id");

CREATE INDEX "SmallMolecule_name_index_i"
  ON "SmallMolecule_name" ("index");

CREATE TABLE "SmallMolecule_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMolecule_id_xref_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_id_xref_object_i"
  ON "SmallMolecule_id_xref" ("object_id");

CREATE INDEX "SmallMolecule_id_xref_index_i"
  ON "SmallMolecule_id_xref" ("index");

CREATE TABLE "SmallMolecule_id_feature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMolecule_id_feature_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_id_feature_objec"
  ON "SmallMolecule_id_feature" ("object_id");

CREATE INDEX "SmallMolecule_id_feature_index"
  ON "SmallMolecule_id_feature" ("index");

CREATE TABLE "SmallMolecule_id_memberPhysica" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMolecule_id_memberPhysica"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_id_memberPhysica"
  ON "SmallMolecule_id_memberPhysica" ("object_id");

CREATE INDEX "SmallMolecule_id_memberPhysic0"
  ON "SmallMolecule_id_memberPhysica" ("index");

CREATE TABLE "SmallMolecule_id_notFeature" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMolecule_id_notFeature_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_id_notFeature_ob"
  ON "SmallMolecule_id_notFeature" ("object_id");

CREATE INDEX "SmallMolecule_id_notFeature_in"
  ON "SmallMolecule_id_notFeature" ("index");

CREATE TABLE "SmallMolecule_id_entityReferen" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "SmallMolecule_id_entityReferen"
    FOREIGN KEY ("object_id")
    REFERENCES "SmallMolecule" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "SmallMolecule_id_entityReferen"
  ON "SmallMolecule_id_entityReferen" ("object_id");

CREATE INDEX "SmallMolecule_id_entityRefere0"
  ON "SmallMolecule_id_entityReferen" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Stoichiometry_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Stoichiometry_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Stoichiometry_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Stoichiometry" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Stoichiometry_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Stoichiometry_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Stoichiometry" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "stoichiometricCoefficient" BINARY_DOUBLE NOT NULL,
  "id_physicalEntity" NUMBER(20) NOT NULL);

CREATE TABLE "Stoichiometry_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Stoichiometry_comment_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Stoichiometry" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Stoichiometry_comment_object_i"
  ON "Stoichiometry_comment" ("object_id");

CREATE INDEX "Stoichiometry_comment_index_i"
  ON "Stoichiometry_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation_id_control" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_id_control"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_id_control"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation_interactio" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_interactio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_interactio"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation_id_partici" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_id_partici"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_id_partici"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_id_xref_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_id_xref_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_comments_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_comments_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReactionRegulation" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReactionRegulation_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReactionRegulation_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "TemplateReactionRegulation" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "controlType" VARCHAR2(512),
  "id_controlled" NUMBER(20) NOT NULL);

CREATE TABLE "TemplateReactionRegulation_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TemplateReactionRegulation_comments_o"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReactionRegulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReactionRegulation_comments_o"
  ON "TemplateReactionRegulation_comments" ("object_id");

CREATE INDEX "TemplateReactionRegulation_comments_i"
  ON "TemplateReactionRegulation_comments" ("index");

CREATE TABLE "TemplateReactionRegulation_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TemplateReactionRegulation_name_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReactionRegulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReactionRegulation_name_objec"
  ON "TemplateReactionRegulation_name" ("object_id");

CREATE INDEX "TemplateReactionRegulation_name_index"
  ON "TemplateReactionRegulation_name" ("index");

CREATE TABLE "TemplateReactionRegulation_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TemplateReactionRegulation_id_xref_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReactionRegulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReactionRegulation_id_xref_ob"
  ON "TemplateReactionRegulation_id_xref" ("object_id");

CREATE INDEX "TemplateReactionRegulation_id_xref_in"
  ON "TemplateReactionRegulation_id_xref" ("index");

CREATE TABLE "TemplateReactionRegulation_id_partici" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TemplateReactionRegulation_id_partici"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReactionRegulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReactionRegulation_id_partici"
  ON "TemplateReactionRegulation_id_partici" ("object_id");

CREATE INDEX "TemplateReactionRegulation_id_partic0"
  ON "TemplateReactionRegulation_id_partici" ("index");

CREATE TABLE "TemplateReactionRegulation_interactio" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "TemplateReactionRegulation_interactio"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReactionRegulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReactionRegulation_interactio"
  ON "TemplateReactionRegulation_interactio" ("object_id");

CREATE INDEX "TemplateReactionRegulation_interacti0"
  ON "TemplateReactionRegulation_interactio" ("index");

CREATE TABLE "TemplateReactionRegulation_id_control" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TemplateReactionRegulation_id_control"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReactionRegulation" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReactionRegulation_id_control"
  ON "TemplateReactionRegulation_id_control" ("object_id");

CREATE INDEX "TemplateReactionRegulation_id_contro0"
  ON "TemplateReactionRegulation_id_control" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction_id_product" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_id_product_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_id_product_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction_interactionTy" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_interactionTy"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_interactionTy"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction_id_participan" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_id_participan"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_id_participan"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TemplateReaction" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TemplateReaction_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TemplateReaction_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "TemplateReaction" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "templateDirection" VARCHAR2(512),
  "id_templateEntity" NUMBER(20) NOT NULL);

CREATE TABLE "TemplateReaction_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TemplateReaction_comments_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReaction_comments_obje"
  ON "TemplateReaction_comments" ("object_id");

CREATE INDEX "TemplateReaction_comments_inde"
  ON "TemplateReaction_comments" ("index");

CREATE TABLE "TemplateReaction_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TemplateReaction_name_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReaction_name_object_i"
  ON "TemplateReaction_name" ("object_id");

CREATE INDEX "TemplateReaction_name_index_i"
  ON "TemplateReaction_name" ("index");

CREATE TABLE "TemplateReaction_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TemplateReaction_id_xref_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReaction_id_xref_objec"
  ON "TemplateReaction_id_xref" ("object_id");

CREATE INDEX "TemplateReaction_id_xref_index"
  ON "TemplateReaction_id_xref" ("index");

CREATE TABLE "TemplateReaction_id_participan" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TemplateReaction_id_participan"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReaction_id_participan"
  ON "TemplateReaction_id_participan" ("object_id");

CREATE INDEX "TemplateReaction_id_participa0"
  ON "TemplateReaction_id_participan" ("index");

CREATE TABLE "TemplateReaction_interactionTy" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "TemplateReaction_interactionTy"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReaction_interactionTy"
  ON "TemplateReaction_interactionTy" ("object_id");

CREATE INDEX "TemplateReaction_interactionT0"
  ON "TemplateReaction_interactionTy" ("index");

CREATE TABLE "TemplateReaction_id_product" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TemplateReaction_id_product_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "TemplateReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TemplateReaction_id_product_ob"
  ON "TemplateReaction_id_product" ("object_id");

CREATE INDEX "TemplateReaction_id_product_in"
  ON "TemplateReaction_id_product" ("index");





/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Thing" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Thing_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Thing_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Thing" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TissueVocabulary_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TissueVocabulary_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TissueVocabulary_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TissueVocabulary_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TissueVocabulary_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TissueVocabulary_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TissueVocabulary" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TissueVocabulary_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TissueVocabulary_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "TissueVocabulary" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "term" VARCHAR2(512));

CREATE TABLE "TissueVocabulary_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TissueVocabulary_comment_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "TissueVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TissueVocabulary_comment_objec"
  ON "TissueVocabulary_comment" ("object_id");

CREATE INDEX "TissueVocabulary_comment_index"
  ON "TissueVocabulary_comment" ("index");

CREATE TABLE "TissueVocabulary_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TissueVocabulary_id_xref_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "TissueVocabulary" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TissueVocabulary_id_xref_objec"
  ON "TissueVocabulary_id_xref" ("object_id");

CREATE INDEX "TissueVocabulary_id_xref_index"
  ON "TissueVocabulary_id_xref" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_id_rightEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_id_rightEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_id_rightEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_id_leftEntity" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_id_leftEntity_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_id_leftEntity_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_participantStoichiom" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_participantStoichiom"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_participantStoichiom"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_interactionType" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_interactionType_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_interactionType_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_id_participant" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_id_participant_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_id_participant_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_id_xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_id_xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_comments_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_comments_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Transport" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Transport_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Transport_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Transport" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20));

CREATE TABLE "Transport_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Transport_comments_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_comments_object_id_i"
  ON "Transport_comments" ("object_id");

CREATE INDEX "Transport_comments_index_i"
  ON "Transport_comments" ("index");

CREATE TABLE "Transport_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Transport_name_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_name_object_id_i"
  ON "Transport_name" ("object_id");

CREATE INDEX "Transport_name_index_i"
  ON "Transport_name" ("index");

CREATE TABLE "Transport_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Transport_id_xref_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_id_xref_object_id_i"
  ON "Transport_id_xref" ("object_id");

CREATE INDEX "Transport_id_xref_index_i"
  ON "Transport_id_xref" ("index");

CREATE TABLE "Transport_id_participant" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Transport_id_participant_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_id_participant_objec"
  ON "Transport_id_participant" ("object_id");

CREATE INDEX "Transport_id_participant_index"
  ON "Transport_id_participant" ("index");

CREATE TABLE "Transport_interactionType" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Transport_interactionType_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_interactionType_obje"
  ON "Transport_interactionType" ("object_id");

CREATE INDEX "Transport_interactionType_inde"
  ON "Transport_interactionType" ("index");

CREATE TABLE "Transport_participantStoichiom" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Transport_participantStoichiom"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_participantStoichiom"
  ON "Transport_participantStoichiom" ("object_id");

CREATE INDEX "Transport_participantStoichio0"
  ON "Transport_participantStoichiom" ("index");

CREATE TABLE "Transport_id_leftEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Transport_id_leftEntity_object"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_id_leftEntity_object"
  ON "Transport_id_leftEntity" ("object_id");

CREATE INDEX "Transport_id_leftEntity_index_"
  ON "Transport_id_leftEntity" ("index");

CREATE TABLE "Transport_id_rightEntity" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Transport_id_rightEntity_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "Transport" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Transport_id_rightEntity_objec"
  ON "Transport_id_rightEntity" ("object_id");

CREATE INDEX "Transport_id_rightEntity_index"
  ON "Transport_id_rightEntity" ("index");







/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_kEQ" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_kEQ_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_kEQ_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_deltaG" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_deltaG_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_deltaG_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_id_rightE" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_id_rightE"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_id_rightE"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_id_leftEn" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_id_leftEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_id_leftEn"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_participa" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_participa"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_participa"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_interacti" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_interacti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_interacti"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_id_partic" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_id_partic"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_id_partic"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_id_xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_id_xref_s"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_id_xref_t"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_name" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_name_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_name_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction_comments" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_comments_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_comments_"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "TransportWithBiochemicalReaction" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "TransportWithBiochemicalReaction_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "TransportWithBiochemicalReaction_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "TransportWithBiochemicalReaction" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "availability" VARCHAR2(512),
  "standardName" VARCHAR2(512),
  "displayName" VARCHAR2(512),
  "evidence" NUMBER(20),
  "dataSource" NUMBER(20),
  "conversionDirection" VARCHAR2(512),
  "spontaneous" NUMBER(1) NOT NULL,
  "kineticLaw" NUMBER(20),
  "deltaH" BINARY_DOUBLE NOT NULL,
  "deltaS" BINARY_DOUBLE NOT NULL,
  "eCNumber" VARCHAR2(512));

CREATE TABLE "TransportWithBiochemicalReaction_comments" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TransportWithBiochemicalReaction_comments_"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_comments_"
  ON "TransportWithBiochemicalReaction_comments" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_comments0"
  ON "TransportWithBiochemicalReaction_comments" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_name" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "TransportWithBiochemicalReaction_name_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_name_obje"
  ON "TransportWithBiochemicalReaction_name" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_name_inde"
  ON "TransportWithBiochemicalReaction_name" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_id_xref" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TransportWithBiochemicalReaction_id_xref_o"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_id_xref_o"
  ON "TransportWithBiochemicalReaction_id_xref" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_id_xref_i"
  ON "TransportWithBiochemicalReaction_id_xref" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_id_partic" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TransportWithBiochemicalReaction_id_partic"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_id_partic"
  ON "TransportWithBiochemicalReaction_id_partic" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_id_parti0"
  ON "TransportWithBiochemicalReaction_id_partic" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_interacti" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "TransportWithBiochemicalReaction_interacti"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_interacti"
  ON "TransportWithBiochemicalReaction_interacti" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_interact0"
  ON "TransportWithBiochemicalReaction_interacti" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_participa" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "TransportWithBiochemicalReaction_participa"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_participa"
  ON "TransportWithBiochemicalReaction_participa" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_particip0"
  ON "TransportWithBiochemicalReaction_participa" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_id_leftEn" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TransportWithBiochemicalReaction_id_leftEn"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_id_leftEn"
  ON "TransportWithBiochemicalReaction_id_leftEn" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_id_leftE0"
  ON "TransportWithBiochemicalReaction_id_leftEn" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_id_rightE" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "TransportWithBiochemicalReaction_id_rightE"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_id_rightE"
  ON "TransportWithBiochemicalReaction_id_rightE" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_id_right0"
  ON "TransportWithBiochemicalReaction_id_rightE" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_deltaG" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "TransportWithBiochemicalReaction_deltaG_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_deltaG_ob"
  ON "TransportWithBiochemicalReaction_deltaG" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_deltaG_in"
  ON "TransportWithBiochemicalReaction_deltaG" ("index");

CREATE TABLE "TransportWithBiochemicalReaction_kEQ" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "TransportWithBiochemicalReaction_kEQ_objec"
    FOREIGN KEY ("object_id")
    REFERENCES "TransportWithBiochemicalReaction" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "TransportWithBiochemicalReaction_kEQ_objec"
  ON "TransportWithBiochemicalReaction_kEQ" ("object_id");

CREATE INDEX "TransportWithBiochemicalReaction_kEQ_index"
  ON "TransportWithBiochemicalReaction_kEQ" ("index");









/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UnificationXref_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UnificationXref_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UnificationXref_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UnificationXref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UnificationXref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UnificationXref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "UnificationXref" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "idVersion" VARCHAR2(512),
  "id" VARCHAR2(512),
  "dbVersion" VARCHAR2(512),
  "db" VARCHAR2(512));

CREATE TABLE "UnificationXref_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "UnificationXref_comment_object"
    FOREIGN KEY ("object_id")
    REFERENCES "UnificationXref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "UnificationXref_comment_object"
  ON "UnificationXref_comment" ("object_id");

CREATE INDEX "UnificationXref_comment_index_"
  ON "UnificationXref_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UtilityClass_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UtilityClass_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UtilityClass_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UtilityClass" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UtilityClass_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UtilityClass_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "UtilityClass" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20));

CREATE TABLE "UtilityClass_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "UtilityClass_comment_object_id"
    FOREIGN KEY ("object_id")
    REFERENCES "UtilityClass" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "UtilityClass_comment_object_id"
  ON "UtilityClass_comment" ("object_id");

CREATE INDEX "UtilityClass_comment_index_i"
  ON "UtilityClass_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Xref_comment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Xref_comment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Xref_comment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Xref" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Xref_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Xref_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Xref" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "idVersion" VARCHAR2(512),
  "id" VARCHAR2(512),
  "dbVersion" VARCHAR2(512),
  "db" VARCHAR2(512));

CREATE TABLE "Xref_comment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" VARCHAR2(512),
  CONSTRAINT "Xref_comment_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Xref" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Xref_comment_object_id_i"
  ON "Xref_comment" ("object_id");

CREATE INDEX "Xref_comment_index_i"
  ON "Xref_comment" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "AlgebraicRule" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "AlgebraicRule_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "AlgebraicRule_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "AlgebraicRule" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "AssignmentRule" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "AssignmentRule_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "AssignmentRule_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "AssignmentRule" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20),
  "variable" VARCHAR2(512));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Constraint" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Constraint_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Constraint_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Constraint" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20),
  "message" VARCHAR2(512));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Delay" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Delay_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Delay_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Delay" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "EventAssignment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "EventAssignment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "EventAssignment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "EventAssignment" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "variable" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Event_eventAssignment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Event_eventAssignment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Event_eventAssignment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Event" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Event_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Event_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Event" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "useValuesFromTriggerTime" NUMBER(1) NOT NULL,
  "id" VARCHAR2(512),
  "name" VARCHAR2(512),
  "priority" NUMBER(20),
  "delay" NUMBER(20),
  "trigger" NUMBER(20));

CREATE TABLE "Event_eventAssignment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Event_eventAssignment_object_i"
    FOREIGN KEY ("object_id")
    REFERENCES "Event" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Event_eventAssignment_object_i"
  ON "Event_eventAssignment" ("object_id");

CREATE INDEX "Event_eventAssignment_index_i"
  ON "Event_eventAssignment" ("index");






/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Experiment_sample" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Experiment_sample_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Experiment_sample_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Experiment_mapping" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Experiment_mapping_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Experiment_mapping_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Experiment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Experiment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Experiment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Experiment" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "experimentId" NUMBER(10) NOT NULL,
  "name" VARCHAR2(512),
  "shortDescription" VARCHAR2(512),
  "source" VARCHAR2(512),
  "user" VARCHAR2(512),
  "metaInfos" VARCHAR2(512),
  "valuesPerSample" NUMBER(10) NOT NULL,
  "defaultMapping" VARCHAR2(512));

CREATE TABLE "Experiment_mapping" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Experiment_mapping_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Experiment" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Experiment_mapping_object_id_i"
  ON "Experiment_mapping" ("object_id");

CREATE INDEX "Experiment_mapping_index_i"
  ON "Experiment_mapping" ("index");

CREATE TABLE "Experiment_sample" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "Experiment_sample_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Experiment" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Experiment_sample_object_id_i"
  ON "Experiment_sample" ("object_id");

CREATE INDEX "Experiment_sample_index_i"
  ON "Experiment_sample" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "FunctionDefinition" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "FunctionDefinition_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "FunctionDefinition_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "FunctionDefinition" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "id" VARCHAR2(512),
  "name" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "ImportSource" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "ImportSource_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "ImportSource_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "ImportSource" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "name" VARCHAR2(512),
  "version" VARCHAR2(512),
  "successor" NUMBER(20),
  CONSTRAINT "ImportSource_successor_fk"
    FOREIGN KEY ("successor")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED);

/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "InitialAssignment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "InitialAssignment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "InitialAssignment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "InitialAssignment" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "symbol" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "KineticLaw_localParameter" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "KineticLaw_localParameter_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "KineticLaw_localParameter_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "KineticLaw" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "KineticLaw_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "KineticLaw_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "KineticLaw" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "id_conversion" NUMBER(20) NOT NULL);

CREATE TABLE "KineticLaw_localParameter" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "KineticLaw_localParameter_obje"
    FOREIGN KEY ("object_id")
    REFERENCES "KineticLaw" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "KineticLaw_localParameter_obje"
  ON "KineticLaw_localParameter" ("object_id");

CREATE INDEX "KineticLaw_localParameter_inde"
  ON "KineticLaw_localParameter" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "LocalParameter" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "LocalParameter_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "LocalParameter_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "LocalParameter" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "id" VARCHAR2(512),
  "name" VARCHAR2(512),
  "value" BINARY_DOUBLE NOT NULL,
  "unit" VARCHAR2(512));


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Mapping" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Mapping_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Mapping_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Mapping" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "idType" VARCHAR2(512),
  "mapping" VARCHAR2(512));

/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Math" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Math_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Math_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Math" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "mathML" VARCHAR2(512));

/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_event" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_event_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_event_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_constraint" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_constraint_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_constraint_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_rule" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_rule_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_rule_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_initialAssignment" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_initialAssignment_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_initialAssignment_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_parameter" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_parameter_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_parameter_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_unitDefinition" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_unitDefinition_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_unitDefinition_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model_id_functionDefinition" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_id_functionDefinition_se"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_id_functionDefinition_tr"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Model" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Model_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Model_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Model" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "id" VARCHAR2(512),
  "name" VARCHAR2(512),
  "substanceUnits" VARCHAR2(512),
  "timeUnits" VARCHAR2(512),
  "volumeUnits" VARCHAR2(512),
  "areaUnits" VARCHAR2(512),
  "lengthUnits" VARCHAR2(512),
  "extentUnit" VARCHAR2(512),
  "conversionFactor" VARCHAR2(512));

CREATE TABLE "Model_id_functionDefinition" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_functionDefinition_ob"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_functionDefinition_ob"
  ON "Model_id_functionDefinition" ("object_id");

CREATE INDEX "Model_id_functionDefinition_in"
  ON "Model_id_functionDefinition" ("index");

CREATE TABLE "Model_id_unitDefinition" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_unitDefinition_object"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_unitDefinition_object"
  ON "Model_id_unitDefinition" ("object_id");

CREATE INDEX "Model_id_unitDefinition_index_"
  ON "Model_id_unitDefinition" ("index");

CREATE TABLE "Model_id_parameter" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_parameter_object_id_f"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_parameter_object_id_i"
  ON "Model_id_parameter" ("object_id");

CREATE INDEX "Model_id_parameter_index_i"
  ON "Model_id_parameter" ("index");

CREATE TABLE "Model_id_initialAssignment" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_initialAssignment_obj"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_initialAssignment_obj"
  ON "Model_id_initialAssignment" ("object_id");

CREATE INDEX "Model_id_initialAssignment_ind"
  ON "Model_id_initialAssignment" ("index");

CREATE TABLE "Model_id_rule" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_rule_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_rule_object_id_i"
  ON "Model_id_rule" ("object_id");

CREATE INDEX "Model_id_rule_index_i"
  ON "Model_id_rule" ("index");

CREATE TABLE "Model_id_constraint" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_constraint_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_constraint_object_id_"
  ON "Model_id_constraint" ("object_id");

CREATE INDEX "Model_id_constraint_index_i"
  ON "Model_id_constraint" ("index");

CREATE TABLE "Model_id_event" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20) NOT NULL,
  CONSTRAINT "Model_id_event_object_id_fk"
    FOREIGN KEY ("object_id")
    REFERENCES "Model" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "Model_id_event_object_id_i"
  ON "Model_id_event" ("object_id");

CREATE INDEX "Model_id_event_index_i"
  ON "Model_id_event" ("index");


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Parameter" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Parameter_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Parameter_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Parameter" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "constant" NUMBER(1) NOT NULL,
  "id" VARCHAR2(512),
  "name" VARCHAR2(512),
  "value" BINARY_DOUBLE NOT NULL,
  "units" VARCHAR2(512));


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Priority" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Priority_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Priority_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Priority" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "RateRule" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "RateRule_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "RateRule_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "RateRule" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20),
  "variable" VARCHAR2(512));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Rule" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Rule_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Rule_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Rule" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Sample" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Sample_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Sample_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Sample" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "indexInExperiment" NUMBER(10) NOT NULL,
  "name" VARCHAR2(512),
  "description" VARCHAR2(512),
  "user" VARCHAR2(512),
  "metaInfos" VARCHAR2(512),
  "dataType" VARCHAR2(512),
  "data" VARCHAR2(512));

/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "SBase" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "SBase_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "SBase_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "SBase" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512));


/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Trigger" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Trigger_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Trigger_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Trigger" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "initialValue" BINARY_DOUBLE NOT NULL,
  "persistent" NUMBER(1) NOT NULL,
  "math" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UnitDefinition_unit" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UnitDefinition_unit_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UnitDefinition_unit_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UnitDefinition" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UnitDefinition_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UnitDefinition_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "UnitDefinition" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "id" VARCHAR2(512),
  "name" VARCHAR2(512));

CREATE TABLE "UnitDefinition_unit" (
  "object_id" NUMBER(20) NOT NULL,
  "index" NUMBER(20) NOT NULL,
  "value" NUMBER(20),
  CONSTRAINT "UnitDefinition_unit_object_id_"
    FOREIGN KEY ("object_id")
    REFERENCES "UnitDefinition" ("unipaxId")
    ON DELETE CASCADE);

CREATE INDEX "UnitDefinition_unit_object_id_"
  ON "UnitDefinition_unit" ("object_id");

CREATE INDEX "UnitDefinition_unit_index_i"
  ON "UnitDefinition_unit" ("index");



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "Unit" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "Unit_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "Unit_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "Unit" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY,
  "unipaxSource" NUMBER(20),
  "metaId" VARCHAR2(512),
  "sboTerm" VARCHAR2(512),
  "notes" VARCHAR2(512),
  "annotation" VARCHAR2(512),
  "exponent" NUMBER(10) NOT NULL,
  "kind" VARCHAR2(512),
  "multiplier" BINARY_DOUBLE NOT NULL,
  "scale" BINARY_DOUBLE NOT NULL,
  "unitDefinition" NUMBER(20));



/* This file was generated by ODB, object-relational mapping (ORM)
 * compiler for C++.
 */

SET FEEDBACK OFF;
WHENEVER SQLERROR EXIT FAILURE;
WHENEVER OSERROR EXIT FAILURE;

BEGIN
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE "UPBase" CASCADE CONSTRAINTS';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -942 THEN RAISE; END IF;
  END;  BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE "UPBase_seq"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN RAISE; END IF;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'DROP TRIGGER "UPBase_trg"';
  EXCEPTION
    WHEN OTHERS THEN
      IF SQLCODE != -4080 THEN RAISE; END IF;
  END;
END;
/


CREATE TABLE "UPBase" (
  "unipaxId" NUMBER(20) NOT NULL PRIMARY KEY);

ALTER TABLE "BindingFeature" ADD
  CONSTRAINT "BindingFeature_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BindingFeature_evidence" ADD
  CONSTRAINT "BindingFeature_evidence_value_"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BindingFeature_featureLocation" ADD
CONSTRAINT "BindingFeature_featureLocatio0"
    FOREIGN KEY ("value")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalPathwayStep" ADD
  CONSTRAINT "BiochemicalPathwayStep_unipaxS"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalPathwayStep_evidenc" ADD
CONSTRAINT "BiochemicalPathwayStep_eviden0"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction" ADD
  CONSTRAINT "BiochemicalReaction_unipaxSour"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction" ADD
  CONSTRAINT "BiochemicalReaction_evidence_f"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction" ADD
  CONSTRAINT "BiochemicalReaction_dataSource"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction" ADD
  CONSTRAINT "BiochemicalReaction_kineticLaw"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction_interactio" ADD
CONSTRAINT "BiochemicalReaction_interacti0"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction_participan" ADD
CONSTRAINT "BiochemicalReaction_participa0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction_deltaG" ADD
  CONSTRAINT "BiochemicalReaction_deltaG_val"
    FOREIGN KEY ("value")
    REFERENCES "DeltaG" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BiochemicalReaction_kEQ" ADD
  CONSTRAINT "BiochemicalReaction_kEQ_value_"
    FOREIGN KEY ("value")
    REFERENCES "KPrime" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BioSource" ADD
  CONSTRAINT "BioSource_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BioSource" ADD
  CONSTRAINT "BioSource_tissue_fk"
    FOREIGN KEY ("tissue")
    REFERENCES "TissueVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "BioSource_cellType" ADD
  CONSTRAINT "BioSource_cellType_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "CellVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Catalysis" ADD
  CONSTRAINT "Catalysis_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Catalysis" ADD
  CONSTRAINT "Catalysis_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Catalysis" ADD
  CONSTRAINT "Catalysis_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Catalysis_interactionType" ADD
  CONSTRAINT "Catalysis_interactionType_valu"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "CellularLocationVocabulary" ADD
  CONSTRAINT "CellularLocationVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "CellVocabulary" ADD
  CONSTRAINT "CellVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ChemicalStructure" ADD
  CONSTRAINT "ChemicalStructure_unipaxSource"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ComplexAssembly" ADD
  CONSTRAINT "ComplexAssembly_kineticLaw_fk"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ComplexAssembly_interactionTyp" ADD
CONSTRAINT "ComplexAssembly_interactionTy0"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ComplexAssembly_participantSto" ADD
CONSTRAINT "ComplexAssembly_participantSt0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Complex" ADD
  CONSTRAINT "Complex_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Complex" ADD
  CONSTRAINT "Complex_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Complex" ADD
  CONSTRAINT "Complex_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Complex" ADD
  CONSTRAINT "Complex_cellularLocation_fk"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Complex_componentStoichiometry" ADD
CONSTRAINT "Complex_componentStoichiometr0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ControlledVocabulary" ADD
  CONSTRAINT "ControlledVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Control" ADD
  CONSTRAINT "Control_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Control" ADD
  CONSTRAINT "Control_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Control" ADD
  CONSTRAINT "Control_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Control_interactionType" ADD
  CONSTRAINT "Control_interactionType_value_"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Conversion" ADD
  CONSTRAINT "Conversion_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Conversion" ADD
  CONSTRAINT "Conversion_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Conversion" ADD
  CONSTRAINT "Conversion_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Conversion" ADD
  CONSTRAINT "Conversion_kineticLaw_fk"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Conversion_interactionType" ADD
  CONSTRAINT "Conversion_interactionType_val"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Conversion_participantStoichio" ADD
CONSTRAINT "Conversion_participantStoichi0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "CovalentBindingFeature" ADD
  CONSTRAINT "CovalentBindingFeature_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "CovalentBindingFeature_evidence" ADD
  CONSTRAINT "CovalentBindingFeature_evidence_valu"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "CovalentBindingFeature_featureLocati" ADD
CONSTRAINT "CovalentBindingFeature_featureLocat0"
    FOREIGN KEY ("value")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Degradation" ADD
  CONSTRAINT "Degradation_kineticLaw_fk"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Degradation_interactionType" ADD
  CONSTRAINT "Degradation_interactionType_va"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Degradation_participantStoichi" ADD
CONSTRAINT "Degradation_participantStoich0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DeltaG" ADD
  CONSTRAINT "DeltaG_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaReference" ADD
  CONSTRAINT "DnaReference_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaReference" ADD
  CONSTRAINT "DnaReference_entityReferenceTy"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaReference" ADD
  CONSTRAINT "DnaReference_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaReference_evidence" ADD
  CONSTRAINT "DnaReference_evidence_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegionReference" ADD
  CONSTRAINT "DnaRegionReference_unipaxSourc"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegionReference" ADD
  CONSTRAINT "DnaRegionReference_entityRefer"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegionReference" ADD
  CONSTRAINT "DnaRegionReference_regionType_"
    FOREIGN KEY ("regionType")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegionReference" ADD
  CONSTRAINT "DnaRegionReference_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegionReference_evidence" ADD
  CONSTRAINT "DnaRegionReference_evidence_va"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegion" ADD
  CONSTRAINT "DnaRegion_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegion" ADD
  CONSTRAINT "DnaRegion_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegion" ADD
  CONSTRAINT "DnaRegion_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "DnaRegion" ADD
  CONSTRAINT "DnaRegion_cellularLocation_fk"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Dna" ADD
  CONSTRAINT "Dna_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Dna" ADD
  CONSTRAINT "Dna_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Dna" ADD
  CONSTRAINT "Dna_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Dna" ADD
  CONSTRAINT "Dna_cellularLocation_fk"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityFeature" ADD
  CONSTRAINT "EntityFeature_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityFeature_evidence" ADD
  CONSTRAINT "EntityFeature_evidence_value_f"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityFeature_featureLocationT" ADD
CONSTRAINT "EntityFeature_featureLocation0"
    FOREIGN KEY ("value")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityReference" ADD
  CONSTRAINT "EntityReference_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityReference" ADD
  CONSTRAINT "EntityReference_entityReferenc"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityReference_evidence" ADD
  CONSTRAINT "EntityReference_evidence_value"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EntityReferenceTypeVocabulary" ADD
  CONSTRAINT "EntityReferenceTypeVocabulary_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Entity" ADD
  CONSTRAINT "Entity_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Entity" ADD
  CONSTRAINT "Entity_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Entity" ADD
  CONSTRAINT "Entity_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EvidenceCodeVocabulary" ADD
  CONSTRAINT "EvidenceCodeVocabulary_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Evidence" ADD
  CONSTRAINT "Evidence_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Evidence_evidenceCode" ADD
  CONSTRAINT "Evidence_evidenceCode_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "EvidenceCodeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Evidence_experimentalForm" ADD
  CONSTRAINT "Evidence_experimentalForm_valu"
    FOREIGN KEY ("value")
    REFERENCES "ExperimentalForm" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Evidence_confidence" ADD
  CONSTRAINT "Evidence_confidence_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Score" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ExperimentalForm" ADD
  CONSTRAINT "ExperimentalForm_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ExperimentalForm_experimentalFormDescri" ADD
CONSTRAINT "ExperimentalForm_experimentalFormDescr0"
    FOREIGN KEY ("value")
    REFERENCES "ExperimentalFormVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ExperimentalFormVocabulary" ADD
  CONSTRAINT "ExperimentalFormVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "FragmentFeature" ADD
  CONSTRAINT "FragmentFeature_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "FragmentFeature_evidence" ADD
  CONSTRAINT "FragmentFeature_evidence_value"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "FragmentFeature_featureLocatio" ADD
CONSTRAINT "FragmentFeature_featureLocati0"
    FOREIGN KEY ("value")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Gene" ADD
  CONSTRAINT "Gene_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Gene" ADD
  CONSTRAINT "Gene_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Gene" ADD
  CONSTRAINT "Gene_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Gene" ADD
  CONSTRAINT "Gene_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "GeneticInteraction" ADD
  CONSTRAINT "GeneticInteraction_unipaxSourc"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "GeneticInteraction" ADD
  CONSTRAINT "GeneticInteraction_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "GeneticInteraction" ADD
  CONSTRAINT "GeneticInteraction_dataSource_"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "GeneticInteraction_type" ADD
  CONSTRAINT "GeneticInteraction_type_value_"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "GeneticInteraction_phenotype" ADD
  CONSTRAINT "GeneticInteraction_phenotype_v"
    FOREIGN KEY ("value")
    REFERENCES "PhenotypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "GeneticInteraction_score" ADD
  CONSTRAINT "GeneticInteraction_score_value"
    FOREIGN KEY ("value")
    REFERENCES "Score" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Interaction" ADD
  CONSTRAINT "Interaction_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Interaction" ADD
  CONSTRAINT "Interaction_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Interaction" ADD
  CONSTRAINT "Interaction_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Interaction_interactionType" ADD
  CONSTRAINT "Interaction_interactionType_va"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "InteractionVocabulary" ADD
  CONSTRAINT "InteractionVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "KPrime" ADD
  CONSTRAINT "KPrime_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ModificationFeature" ADD
  CONSTRAINT "ModificationFeature_unipaxSour"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ModificationFeature" ADD
  CONSTRAINT "ModificationFeature_modificati"
    FOREIGN KEY ("modificationType")
    REFERENCES "SequenceModificationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ModificationFeature_evidence" ADD
  CONSTRAINT "ModificationFeature_evidence_v"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ModificationFeature_featureLoc" ADD
CONSTRAINT "ModificationFeature_featureLo0"
    FOREIGN KEY ("value")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Modulation" ADD
  CONSTRAINT "Modulation_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Modulation" ADD
  CONSTRAINT "Modulation_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Modulation" ADD
  CONSTRAINT "Modulation_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Modulation_interactionType" ADD
  CONSTRAINT "Modulation_interactionType_val"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "MolecularInteraction" ADD
  CONSTRAINT "MolecularInteraction_unipaxSou"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "MolecularInteraction" ADD
  CONSTRAINT "MolecularInteraction_evidence_"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "MolecularInteraction" ADD
  CONSTRAINT "MolecularInteraction_dataSourc"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "MolecularInteraction_interacti" ADD
CONSTRAINT "MolecularInteraction_interact0"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Pathway" ADD
  CONSTRAINT "Pathway_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Pathway" ADD
  CONSTRAINT "Pathway_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Pathway" ADD
  CONSTRAINT "Pathway_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Pathway" ADD
  CONSTRAINT "Pathway_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PathwayStep" ADD
  CONSTRAINT "PathwayStep_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PathwayStep_evidence" ADD
  CONSTRAINT "PathwayStep_evidence_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PhenotypeVocabulary" ADD
  CONSTRAINT "PhenotypeVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PhysicalEntity" ADD
  CONSTRAINT "PhysicalEntity_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PhysicalEntity" ADD
  CONSTRAINT "PhysicalEntity_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PhysicalEntity" ADD
  CONSTRAINT "PhysicalEntity_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PhysicalEntity" ADD
  CONSTRAINT "PhysicalEntity_cellularLocatio"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ProteinReference" ADD
  CONSTRAINT "ProteinReference_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ProteinReference" ADD
  CONSTRAINT "ProteinReference_entityReferen"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ProteinReference" ADD
  CONSTRAINT "ProteinReference_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "ProteinReference_evidence" ADD
  CONSTRAINT "ProteinReference_evidence_valu"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Protein" ADD
  CONSTRAINT "Protein_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Protein" ADD
  CONSTRAINT "Protein_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Protein" ADD
  CONSTRAINT "Protein_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Protein" ADD
  CONSTRAINT "Protein_cellularLocation_fk"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Provenance" ADD
  CONSTRAINT "Provenance_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "PublicationXref" ADD
  CONSTRAINT "PublicationXref_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RelationshipTypeVocabulary" ADD
  CONSTRAINT "RelationshipTypeVocabulary_unipaxSour"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RelationshipXref" ADD
  CONSTRAINT "RelationshipXref_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RelationshipXref_relationshipT" ADD
CONSTRAINT "RelationshipXref_relationship0"
    FOREIGN KEY ("value")
    REFERENCES "RelationshipTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaReference" ADD
  CONSTRAINT "RnaReference_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaReference" ADD
  CONSTRAINT "RnaReference_entityReferenceTy"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaReference" ADD
  CONSTRAINT "RnaReference_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaReference_evidence" ADD
  CONSTRAINT "RnaReference_evidence_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegionReference" ADD
  CONSTRAINT "RnaRegionReference_unipaxSourc"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegionReference" ADD
  CONSTRAINT "RnaRegionReference_entityRefer"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegionReference" ADD
  CONSTRAINT "RnaRegionReference_organism_fk"
    FOREIGN KEY ("organism")
    REFERENCES "BioSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegionReference" ADD
  CONSTRAINT "RnaRegionReference_regionType_"
    FOREIGN KEY ("regionType")
    REFERENCES "SequenceRegionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegionReference_evidence" ADD
  CONSTRAINT "RnaRegionReference_evidence_va"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegion" ADD
  CONSTRAINT "RnaRegion_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegion" ADD
  CONSTRAINT "RnaRegion_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegion" ADD
  CONSTRAINT "RnaRegion_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RnaRegion" ADD
  CONSTRAINT "RnaRegion_cellularLocation_fk"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Rna" ADD
  CONSTRAINT "Rna_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Rna" ADD
  CONSTRAINT "Rna_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Rna" ADD
  CONSTRAINT "Rna_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Rna" ADD
  CONSTRAINT "Rna_cellularLocation_fk"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Score" ADD
  CONSTRAINT "Score_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Score" ADD
  CONSTRAINT "Score_scoreSource_fk"
    FOREIGN KEY ("scoreSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceInterval" ADD
  CONSTRAINT "SequenceInterval_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceInterval" ADD
  CONSTRAINT "SequenceInterval_sequenceInter"
    FOREIGN KEY ("sequenceIntervalBegin")
    REFERENCES "SequenceSite" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceInterval" ADD
CONSTRAINT "SequenceInterval_sequenceInte0"
    FOREIGN KEY ("sequenceIntervalEnd")
    REFERENCES "SequenceSite" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceLocation" ADD
  CONSTRAINT "SequenceLocation_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceModificationVocabulary" ADD
  CONSTRAINT "SequenceModificationVocabulary_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceRegionVocabulary" ADD
  CONSTRAINT "SequenceRegionVocabulary_unipaxSource"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SequenceSite" ADD
  CONSTRAINT "SequenceSite_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMoleculeReference" ADD
  CONSTRAINT "SmallMoleculeReference_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMoleculeReference" ADD
  CONSTRAINT "SmallMoleculeReference_entityReferen"
    FOREIGN KEY ("entityReferenceType")
    REFERENCES "EntityReferenceTypeVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMoleculeReference" ADD
  CONSTRAINT "SmallMoleculeReference_structure_fk"
    FOREIGN KEY ("structure")
    REFERENCES "ChemicalStructure" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMoleculeReference_evidence" ADD
  CONSTRAINT "SmallMoleculeReference_evidence_valu"
    FOREIGN KEY ("value")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMolecule" ADD
  CONSTRAINT "SmallMolecule_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMolecule" ADD
  CONSTRAINT "SmallMolecule_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMolecule" ADD
  CONSTRAINT "SmallMolecule_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SmallMolecule" ADD
  CONSTRAINT "SmallMolecule_cellularLocation"
    FOREIGN KEY ("cellularLocation")
    REFERENCES "CellularLocationVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Stoichiometry" ADD
  CONSTRAINT "Stoichiometry_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReactionRegulation" ADD
  CONSTRAINT "TemplateReactionRegulation_unipaxSour"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReactionRegulation" ADD
  CONSTRAINT "TemplateReactionRegulation_evidence_f"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReactionRegulation" ADD
  CONSTRAINT "TemplateReactionRegulation_dataSource"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReactionRegulation_interactio" ADD
CONSTRAINT "TemplateReactionRegulation_interacti0"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReaction" ADD
  CONSTRAINT "TemplateReaction_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReaction" ADD
  CONSTRAINT "TemplateReaction_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReaction" ADD
  CONSTRAINT "TemplateReaction_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TemplateReaction_interactionTy" ADD
CONSTRAINT "TemplateReaction_interactionT0"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Thing" ADD
  CONSTRAINT "Thing_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TissueVocabulary" ADD
  CONSTRAINT "TissueVocabulary_unipaxSource_"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Transport" ADD
  CONSTRAINT "Transport_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Transport" ADD
  CONSTRAINT "Transport_evidence_fk"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Transport" ADD
  CONSTRAINT "Transport_dataSource_fk"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Transport" ADD
  CONSTRAINT "Transport_kineticLaw_fk"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Transport_interactionType" ADD
  CONSTRAINT "Transport_interactionType_valu"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Transport_participantStoichiom" ADD
CONSTRAINT "Transport_participantStoichio0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction" ADD
  CONSTRAINT "TransportWithBiochemicalReaction_unipaxSou"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction" ADD
  CONSTRAINT "TransportWithBiochemicalReaction_evidence_"
    FOREIGN KEY ("evidence")
    REFERENCES "Evidence" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction" ADD
  CONSTRAINT "TransportWithBiochemicalReaction_dataSourc"
    FOREIGN KEY ("dataSource")
    REFERENCES "Provenance" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction" ADD
  CONSTRAINT "TransportWithBiochemicalReaction_kineticLa"
    FOREIGN KEY ("kineticLaw")
    REFERENCES "KineticLaw" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction_interacti" ADD
CONSTRAINT "TransportWithBiochemicalReaction_interact0"
    FOREIGN KEY ("value")
    REFERENCES "InteractionVocabulary" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction_participa" ADD
CONSTRAINT "TransportWithBiochemicalReaction_particip0"
    FOREIGN KEY ("value")
    REFERENCES "Stoichiometry" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction_deltaG" ADD
  CONSTRAINT "TransportWithBiochemicalReaction_deltaG_va"
    FOREIGN KEY ("value")
    REFERENCES "DeltaG" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "TransportWithBiochemicalReaction_kEQ" ADD
  CONSTRAINT "TransportWithBiochemicalReaction_kEQ_value"
    FOREIGN KEY ("value")
    REFERENCES "KPrime" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "UnificationXref" ADD
  CONSTRAINT "UnificationXref_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "UtilityClass" ADD
  CONSTRAINT "UtilityClass_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Xref" ADD
  CONSTRAINT "Xref_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AlgebraicRule" ADD
  CONSTRAINT "AlgebraicRule_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AlgebraicRule" ADD
  CONSTRAINT "AlgebraicRule_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AssignmentRule" ADD
  CONSTRAINT "AssignmentRule_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "AssignmentRule" ADD
  CONSTRAINT "AssignmentRule_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Constraint" ADD
  CONSTRAINT "Constraint_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Constraint" ADD
  CONSTRAINT "Constraint_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Delay" ADD
  CONSTRAINT "Delay_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Delay" ADD
  CONSTRAINT "Delay_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EventAssignment" ADD
  CONSTRAINT "EventAssignment_unipaxSource_f"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "EventAssignment" ADD
  CONSTRAINT "EventAssignment_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Event" ADD
  CONSTRAINT "Event_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Event" ADD
  CONSTRAINT "Event_priority_fk"
    FOREIGN KEY ("priority")
    REFERENCES "Priority" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Event" ADD
  CONSTRAINT "Event_delay_fk"
    FOREIGN KEY ("delay")
    REFERENCES "Delay" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Event" ADD
  CONSTRAINT "Event_trigger_fk"
    FOREIGN KEY ("trigger")
    REFERENCES "Trigger" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Event_eventAssignment" ADD
  CONSTRAINT "Event_eventAssignment_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "EventAssignment" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Experiment_mapping" ADD
  CONSTRAINT "Experiment_mapping_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Mapping" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Experiment_sample" ADD
  CONSTRAINT "Experiment_sample_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Sample" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "FunctionDefinition" ADD
  CONSTRAINT "FunctionDefinition_unipaxSourc"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "FunctionDefinition" ADD
  CONSTRAINT "FunctionDefinition_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "InitialAssignment" ADD
  CONSTRAINT "InitialAssignment_unipaxSource"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "InitialAssignment" ADD
  CONSTRAINT "InitialAssignment_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "KineticLaw" ADD
  CONSTRAINT "KineticLaw_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "KineticLaw_localParameter" ADD
  CONSTRAINT "KineticLaw_localParameter_valu"
    FOREIGN KEY ("value")
    REFERENCES "LocalParameter" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "LocalParameter" ADD
  CONSTRAINT "LocalParameter_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Model" ADD
  CONSTRAINT "Model_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Parameter" ADD
  CONSTRAINT "Parameter_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Priority" ADD
  CONSTRAINT "Priority_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Priority" ADD
  CONSTRAINT "Priority_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RateRule" ADD
  CONSTRAINT "RateRule_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "RateRule" ADD
  CONSTRAINT "RateRule_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Rule" ADD
  CONSTRAINT "Rule_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Rule" ADD
  CONSTRAINT "Rule_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "SBase" ADD
  CONSTRAINT "SBase_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Trigger" ADD
  CONSTRAINT "Trigger_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Trigger" ADD
  CONSTRAINT "Trigger_math_fk"
    FOREIGN KEY ("math")
    REFERENCES "Math" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "UnitDefinition" ADD
  CONSTRAINT "UnitDefinition_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "UnitDefinition_unit" ADD
  CONSTRAINT "UnitDefinition_unit_value_fk"
    FOREIGN KEY ("value")
    REFERENCES "Unit" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Unit" ADD
  CONSTRAINT "Unit_unipaxSource_fk"
    FOREIGN KEY ("unipaxSource")
    REFERENCES "ImportSource" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE "Unit" ADD
  CONSTRAINT "Unit_unitDefinition_fk"
    FOREIGN KEY ("unitDefinition")
    REFERENCES "UnitDefinition" ("unipaxId")
    DEFERRABLE INITIALLY DEFERRED;

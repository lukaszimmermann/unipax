PROJECT(UniPAX)

SET(UNIPAX_VERSION_MAJOR "0")
SET(UNIPAX_VERSION_MINOR "1")
SET(UNIPAX_VERSION_PATCH "0")


## Inclusion of additional macros, etc.
INCLUDE(${CMAKE_SOURCE_DIR}/cmake/UniPAXCompilerSpecific.cmake)

INCLUDE(cmake/UniPAXMacros.cmake)
INCLUDE(cmake/UniPAXSources.cmake)
INCLUDE(cmake/UniPAXDocumentation.cmake)


IF (database STREQUAL "oracle")
	INCLUDE_DIRECTORIES(
		${LEMON_INCLUDE_DIR}
		${Boost_INCLUDE_DIR}
		${ODB_INCLUDE_DIR}
		${ODBBOOST_INCLUDE_DIR}
		${SBML_INCLUDE_DIR}
	    ${ODBORACLE_INCLUDE_DIR}
	    ${ORACLE_INCLUDE_DIR}
	    ${GTEST_INCLUDE_DIR}
	)
	
	
	SET(UNIPAX_DEP_LIBRARIES
		${QT_QTCORE_LIBRARY}
		${QT_QTXML_LIBRARY}
		${QT_QTSQL_LIBRARY}
		${QT_QTNETWORK_LIBRARY}
		${QT_QTPLUGIN_LIBRARY}
		${BOOST_LIBRARIES}
		${ODB_LIBRARY}
		${ODBORACLE_LIBRARY}
		${ORACLE_OCI_LIBRARY}
		${ODBBOOST_LIBRARY}
		${SBML_LIBRARY}
		${LEMON_LIBRARY}
	)
ENDIF (database STREQUAL "oracle")

IF (NOT (database STREQUAL "oracle"))
	INCLUDE_DIRECTORIES(
		${LEMON_INCLUDE_DIR}
		${Boost_INCLUDE_DIR}
		${ODB_INCLUDE_DIR}
		${ODBBOOST_INCLUDE_DIR}
		${SBML_INCLUDE_DIR}
	    ${ODBMYSQL_INCLUDE_DIR}
		${MYSQL_INCLUDE_DIR}
		${GTEST_INCLUDE_DIR}
	)
	
	SET(UNIPAX_DEP_LIBRARIES
		${QT_QTCORE_LIBRARY}
		${QT_QTXML_LIBRARY}
		${QT_QTSQL_LIBRARY}
		${QT_QTNETWORK_LIBRARY}
		${QT_QTPLUGIN_LIBRARY}
		${BOOST_LIBRARIES}
		${ODB_LIBRARY}
		${ODBMYSQL_LIBRARY}
		${ODBBOOST_LIBRARY}
		${MYSQL_LIBRARY}
		${SBML_LIBRARY}
		${LEMON_LIBRARY}
	)
ENDIF (NOT (database STREQUAL "oracle"))


QT4_WRAP_CPP(UniPAX_MOC_SRCS ${MOC_HEADERS_LIST} OPTIONS -DBOOST_TT_HAS_OPERATOR_HPP_INCLUDED)

SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/lib")



ADD_LIBRARY(UniPAX SHARED ${UNIPAX_sources} ${UniPAX_MOC_SRCS} ${UNIPAX_headers})
TARGET_LINK_LIBRARIES(UniPAX ${UNIPAX_DEP_LIBRARIES})
SET_TARGET_PROPERTIES(UniPAX PROPERTIES COMPILE_FLAGS "${UNIPAX_COMPILE_FLAGS} ${UNIPAX_DATABASE_FLAGS}")
SET_TARGET_PROPERTIES(UniPAX PROPERTIES LINK_FLAGS    "${UNIPAX_LINK_FLAGS}")



file(COPY ../../contrib DESTINATION ../../ PATTERN ".svn" EXCLUDE)


SET(BRIDGEDB_VERSION "Hs_Derby_20130701" CACHE STRING "BridgeDB-Version")

if (NOT EXISTS contrib/BridgeDb/mapping-files/current.bridge)
	message(STATUS "Downloading BridgeDB version ${BRIDGEDB_VERSION}... (this may take some time)")
	file(DOWNLOAD http://bridgedb.org/data/gene_database/${BRIDGEDB_VERSION}.bridge contrib/BridgeDb/mapping-files/current.bridge)
else() 
	message(STATUS "Using BridgeDB file contrib/BridgeDb/mapping-files/current.bridge")
endif()